<?php
/**
 *  class-sms-service
 *
 * @package 0.0.1
 */

defined( 'ABSPATH' ) || exit;

class SmsService {
	private SmsProviderInterface $provider;

	public function __construct( SmsProviderInterface $provider ) {
		$this->provider = $provider;
	}

	public function send_appointment_sms( int $post_id ): void {
		$timestamp = strtotime( get_field( 'fitting_time', $post_id ) );
		$phone     = get_field( 'phone', $post_id );

		if ( ! $phone || ! $timestamp ) {
			Logger::log( 'SMS: –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ç–µ–ª–µ—Ñ–æ–Ω –∏–ª–∏ –¥–∞—Ç—É –¥–ª—è –∑–∞–ø–∏—Å–∏', compact( 'post_id', 'phone', 'timestamp' ) );
			return;
		}

		$fitting_date_time = date_i18n( 'd.m.Y –≤ H:i', $timestamp );

		$text = "–ñ–¥—ë–º –≤ LOVE FOREVER ‚Äì $fitting_date_time –Ω–∞ –ø—Ä–∏–º–µ—Ä–∫—É:  –º. –°–∞–¥–æ–≤–∞—è, –í–æ–∑–Ω–µ—Å–µ–Ω—Å–∫–∏–π –ø—Ä-–∫—Ç 18 (9 –º–∏–Ω. –æ—Ç –º–µ—Ç—Ä–æ). –¢–µ–ª: 8 (931) 341-20-36";

		$success = $this->provider->send( $phone, $text, SmsRoute::CASCADE );
		if ( ! $success ) {
			Logger::log( 'SMS: –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å SMS —Å –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ–º', compact( 'post_id', 'phone', 'text' ) );
		} else {
			Logger::log( 'SMS: SMS —Å –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ–º –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω', compact( 'post_id', 'phone', 'text', 'success' ) );
		}
	}

	public function send_reminder_sms( int $post_id ): void {
		$timestamp = strtotime( get_field( 'fitting_time', $post_id ) );
		$phone     = get_field( 'phone', $post_id );
		if ( ! $phone || ! $timestamp ) {
			return;
		}

		$fitting_date_time = date_i18n( 'd.m.Y –≤ H:i', $timestamp );

		$text = "–î–æ –í–∞—à–µ–π –ø—Ä–∏–º–µ—Ä–∫–∏ –≤ —Å–∞–ª–æ–Ω–µ LOVE FOREVER - –º. –°–∞–¥–æ–≤–∞—è –æ—Å—Ç–∞–ª–æ—Å—å 2 —á–∞—Å–∞ ($fitting_date_time). –¢–µ–ª. —Å–∞–ª–æ–Ω–∞: 8 (931) 341-20-36";

		$success = $this->provider->send( $phone, $text, SmsRoute::CASCADE );
		if ( ! $success ) {
			Logger::log( 'SMS: –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å SMS —Å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ–º', compact( 'post_id', 'phone', 'text' ) );
		}
	}

	public function send_feedback_sms( int $post_id ): void {
		$phone = get_field( 'phone', $post_id );
		if ( ! $phone ) {
			return;
		}

		$text = '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ü–µ–Ω–∏—Ç–µ –≤–∞—à –≤–∏–∑–∏—Ç –≤ LOVE FOREVER ‚Äì https://clck.ru/WRCeL';

		$success = $this->provider->send( $phone, $text, SmsRoute::SMS_ONLY );

		if ( ! $success ) {
			Logger::log( 'SMS: –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å SMS —Å –ø—Ä–æ—Å—å–±–æ–π –æ–± –æ—Ç–∑—ã–≤–µ', compact( 'post_id', 'phone' ) );
		}
	}

	public function send_favorites_sms( string $phone, string $favorites_link ): void {
		if ( empty( $phone ) || empty( $favorites_link ) ) {
			Logger::log( 'SMS: –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å SMS —Å –∏–∑–±—Ä–∞–Ω–Ω—ã–º - –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç —Ç–µ–ª–µ—Ñ–æ–Ω –∏–ª–∏ —Å—Å—ã–ª–∫–∞', compact( 'phone', 'favorites_link' ) );
			return;
		}

		$text = "–°–ø–∏—Å–æ–∫ –ø–ª–∞—Ç—å–µ–≤, –∫–æ—Ç–æ—Ä—ã–µ –≤—ã –æ—Ç–º–µ—Ç–∏–ª–∏, –ø–æ —Å—Å—ã–ª–∫–µ –Ω–∏–∂–µ:
üîó $favorites_link
–ü—É—Å—Ç—å –≤—ã–±–æ—Ä –±—É–¥–µ—Ç —É–¥–æ–±–Ω—ã–º ‚Äî –∫–æ–º–∞–Ω–¥–∞ LOVE FOREVER!";

		$success = $this->provider->send( $phone, $text, SmsRoute::CASCADE );

		if ( ! $success ) {
			Logger::log( 'SMS: –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å SMS —Å –∏–∑–±—Ä–∞–Ω–Ω—ã–º', compact( 'phone', 'favorites_link', 'text' ) );
		} else {
			Logger::log( 'SMS: SMS —Å –∏–∑–±—Ä–∞–Ω–Ω—ã–º –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω', compact( 'phone', 'favorites_link', 'text', 'success' ) );
		}
	}
}
