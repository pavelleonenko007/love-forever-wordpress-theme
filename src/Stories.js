import '@splidejs/splide/css/core';

import Splide from '@splidejs/splide';
import DialogCollection from './Dialog';

export class StoriesManager {
	constructor(element, sliderOptions = { startSlide: 0 }) {
		this.element = element;
		this.sliderOptions = sliderOptions;
		this.storiesDialog = DialogCollection.getDialogsById('storiesDialog');

		this.init();
		this.bindEvents();
	}

	init() {
		this.storiesSlider = new StoriesSlider(this.element, this.sliderOptions);
	}

	onEnded = () => {
		this.storiesDialog.close();
	};

	onCloseDialog = (event) => {
		const dialogId = event.detail.dialogId;
		if (dialogId === 'storiesDialog') {
			this.destroy();
		}
	};

	destroy() {
		this.storiesSlider.destroy();
		document.removeEventListener('stories:ended', this.onEnded);
		document.removeEventListener('dialogClose', this.onCloseDialog);
	}

	bindEvents() {
		document.addEventListener('stories:ended', this.onEnded);
		document.addEventListener('dialogClose', this.onCloseDialog);
	}
}

class StoriesSlider {
	constructor(element, options = { startSlide: 0 }) {
		this.element = element;
		this.activeStoryIndex = options.startSlide;

		this.init();
	}

	init() {
		this.stories = new Map();

		this.element.querySelectorAll('[data-js-story]').forEach((story, index) => {
			this.stories.set(index, new Story(story));
		});

		this.splide = new Splide(this.element, {
			width: '465rem',
			perMove: 1,
			perPage: 1,
			pagination: false,
			arrows: false,
			speed: 0,
			start: this.activeStoryIndex,
			drag: false,
			breakpoints: {
				479: {
					width: '100vw',
					padding: 0,
					gap: 0,
				},
			},
		});

		// –ß—Ç–æ–±—ã –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ –∏—Å—Ç–æ—Ä–∏–∏ –Ω–µ –±—ã–ª–æ –∞–Ω–∏–º–∞—Ü–∏–∏, –∞ –ø–æ—Å–ª–µ —É–∂–µ –±—ã–ª–∞
		setTimeout(() => {
			this.splide.options.speed = 400;
		}, 0);

		this.bindEvents();
		this.splide.mount();
		this.openStory(this.activeStoryIndex);
	}

	openStory(index) {
		if (index >= this.splide.length) {
			document.dispatchEvent(
				new CustomEvent('stories:ended', {
					bubbles: true,
				})
			);
			return;
		}

		if (index < 0) {
			index = 0;
			this.stories.get(this.activeStoryIndex).play();
		}

		this.splide.go(index);
	}

	next() {
		this.openStory(this.activeStoryIndex + 1);
	}

	prev() {
		this.openStory(this.activeStoryIndex - 1);
	}

	onActive = ({ index }) => {
		this.activeStoryIndex = index;

		this.stories.forEach((story, i) => {
			story.setIsActiveStory(i === this.activeStoryIndex);
		});

		this.stories.get(this.activeStoryIndex).play();
	};

	// onMoved = () => {
	// 	this.stories.get(this.activeStoryIndex).play();
	// };

	onMove = () => {
		this.stories.forEach((story) => {
			story.pause();
		});
	};

	onNext = () => {
		this.next();
	};

	onPrev = () => {
		this.prev();
	};

	onPointerUp = (event) => {
		const story = event.target.closest('[data-js-story]');

		if (!story) {
			return;
		}

		const storyIndex = parseInt(story.dataset.jsStory);

		if (storyIndex === this.activeStoryIndex) {
			return;
		}

		this.openStory(storyIndex);
	};

	bindEvents() {
		// this.element.addEventListener('pointerdown', this.onPointerDown);
		this.element.addEventListener('pointerup', this.onPointerUp);
		// this.splide.on('moved', this.onMoved);
		this.splide.on('move', this.onMove);
		this.splide.on('active', this.onActive);
		document.addEventListener('stories:next', this.onNext);
		document.addEventListener('stories:prev', this.onPrev);
	}

	destroy() {
		this.element.removeEventListener('pointerup', this.onPointerUp);
		this.splide.off('move', this.onMove);
		this.splide.off('active', this.onActive);
		document.removeEventListener('stories:next', this.onNext);
		document.removeEventListener('stories:prev', this.onPrev);
		this.splide.destroy();
		this.stories.forEach((story) => {
			story.destroy();
		});
		this.stories.clear();
	}
}

class Story {
	constructor(element, options = {}) {
		this.element = element;
		this.options = options;
		this.slides = new Map();
		/**
		 * @type {Map<number, ProgressBar>}
		 */
		this.progressBars = new Map();
		/**
		 * @type {Map<number, StoryPlayer>}
		 */
		this.storyPlayers = new Map();
		this.activeSlideIndex = 0;
		this.isActiveStory = false;
		this.lastPointerUpTime = 0;

		this.longPressTimer = null;
		this.isPausedByUser = false;
		this.longPressDelay = 600;

		this.init();
		this.bindEvents();

		this.loadSlideMedia(this.activeSlideIndex);

		this.openSlide(this.activeSlideIndex);
	}

	init() {
		this.element
			.querySelectorAll('[data-js-story-progress-bar]')
			.forEach((progressBar, index) => {
				this.progressBars.set(index, new ProgressBar(progressBar));
			});

		this.element
			.querySelectorAll('[data-js-story-slide]')
			.forEach((slide, index) => {
				this.slides.set(index, slide);
				this.storyPlayers.set(
					index,
					new StoryPlayer(slide, { progressBar: this.progressBars.get(index) })
				);
			});
	}

	setIsActiveStory(isActive) {
		this.isActiveStory = isActive;
	}

	openSlide(index) {
		if (index >= this.slides.size) {
			document.dispatchEvent(
				new CustomEvent('stories:next', {
					bubbles: true,
				})
			);
			return;
		}

		if (index < 0) {
			document.dispatchEvent(
				new CustomEvent('stories:prev', {
					bubbles: true,
				})
			);
			return;
		}

		this.activeSlideIndex = index;
		this.progressBars.forEach((progressBar, i) => {
			if (i > this.activeSlideIndex) {
				progressBar.setProgress(0);
			}

			if (i < this.activeSlideIndex) {
				progressBar.setProgress(1);
			}

			progressBar.getElement().classList.remove('is-active');
		});

		this.slides.forEach((slide, i) => {
			slide.classList.toggle('is-active', i === index);
		});

		let nextIndex = index + 1;

		if (nextIndex < this.slides.size) {
			this.loadSlideMedia(nextIndex);
		}
	}

	next() {
		console.log('next slide');

		this.progressBars
			.get(this.activeSlideIndex)
			.getElement()
			.classList.remove('is-active');
		this.stop();
		let nextIndex = this.activeSlideIndex + 1;

		if (nextIndex >= this.slides.size) {
			// –ï—Å–ª–∏ —ç—Ç–æ –ø–æ—Å–ª–µ–¥–Ω–∏–π —Å–ª–∞–π–¥, –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–π –∏—Å—Ç–æ—Ä–∏–∏
			document.dispatchEvent(
				new CustomEvent('stories:next', {
					bubbles: true,
				})
			);
			return;
		}

		this.openSlide(nextIndex);
		this.play();
	}

	prev() {
		this.reset();
		let prevIndex = this.activeSlideIndex - 1;

		if (prevIndex < 0) {
			// –ï—Å–ª–∏ —ç—Ç–æ –ø–µ—Ä–≤—ã–π —Å–ª–∞–π–¥, –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –ø—Ä–µ–¥—ã–¥—É—â–µ–π –∏—Å—Ç–æ—Ä–∏–∏
			document.dispatchEvent(
				new CustomEvent('stories:prev', {
					bubbles: true,
				})
			);
			return;
		}

		this.openSlide(prevIndex);
		this.play();
	}

	pause = () => {
		const player = this.storyPlayers.get(this.activeSlideIndex);

		player.pause();
	};

	// –í–æ–∑–æ–±–Ω–æ–≤–∏—Ç—å
	resume() {
		const player = this.storyPlayers.get(this.activeSlideIndex);
		player.resume();
	}

	stop() {
		const player = this.storyPlayers.get(this.activeSlideIndex);

		player.stop();
	}

	play() {
		const player = this.storyPlayers.get(this.activeSlideIndex);

		player?.play();
	}

	reset() {
		const player = this.storyPlayers.get(this.activeSlideIndex);

		player.reset();
	}

	loadSlideMedia(index) {
		const player = this.storyPlayers.get(index);

		player.loadSlideMedia();
	}

	onPointerDown = (event) => {
		if (!this.isActiveStory) return;

		// –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –∫–ª–∏–∫ –ø—Ä–∏ —É–¥–µ—Ä–∂–∞–Ω–∏–∏
		event.stopPropagation();

		// —Å—Ç–∞–≤–∏–º —Ç–∞–π–º–µ—Ä, –µ—Å–ª–∏ —É–¥–µ—Ä–∂–∏–≤–∞–µ—Ç > 600 –º—Å ‚Äî —Å—Ç–∞–≤–∏–º –Ω–∞ –ø–∞—É–∑—É
		this.longPressTimer = setTimeout(() => {
			this.isPausedByUser = true;
			this.pause();
		}, this.longPressDelay);
	};

	onPointerUp = (event) => {
		console.log('onPointerUp');

		if (!this.isActiveStory) {
			return;
		}

		const now = performance.now();
		// üëá –∑–∞—â–∏—Ç–∞ –æ—Ç –¥–≤–æ–π–Ω—ã—Ö pointerup –≤ Safari
		if (now - this.lastPointerUpTime < 300) return;
		this.lastPointerUpTime = now;

		// –ï—Å–ª–∏ —É–¥–µ—Ä–∂–∞–Ω–∏–µ –Ω–µ —É—Å–ø–µ–ª–æ —Å—Ä–∞–±–æ—Ç–∞—Ç—å ‚Äî –ø—Ä–æ—Å—Ç–æ –æ—á–∏—â–∞–µ–º —Ç–∞–π–º–µ—Ä
		clearTimeout(this.longPressTimer);

		// –ï—Å–ª–∏ –∏—Å—Ç–æ—Ä–∏—è –±—ã–ª–∞ –Ω–∞ –ø–∞—É–∑–µ ‚Äî –≤–æ–∑–æ–±–Ω–æ–≤–ª—è–µ–º
		if (this.isPausedByUser) {
			this.isPausedByUser = false;
			this.resume();
			return;
		}

		const rect = this.element.getBoundingClientRect();
		const x = event.clientX - rect.left;
		const width = rect.width;

		if (x < width / 2) {
			this.prev();
		} else {
			this.next();
		}
	};

	onNext = () => {
		if (!this.isActiveStory) {
			return;
		}

		this.next();
	};

	onPrev = () => {
		if (!this.isActiveStory) {
			return;
		}

		this.prev();
	};

	destroy() {
		this.storyPlayers.forEach((player) => {
			player.destroy();
		});
		this.storyPlayers.clear();
		this.progressBars.forEach((progressBar) => {
			progressBar.destroy();
		});
		this.progressBars.clear();

		this.element.removeEventListener('pointerdown', this.onPointerDown);
		this.element.removeEventListener('pointerup', this.onPointerUp);
		document.removeEventListener('story:next', this.onNext);
		document.removeEventListener('story:prev', this.onPrev);
		document.removeEventListener('stories:next', this.pause);
		document.removeEventListener('stories:prev', this.pause);
	}

	bindEvents() {
		this.element.addEventListener('pointerdown', this.onPointerDown);
		this.element.addEventListener('pointerup', this.onPointerUp);
		document.addEventListener('story:next', this.onNext);
		document.addEventListener('story:prev', this.onPrev);
		document.addEventListener('stories:next', this.pause);
		document.addEventListener('stories:prev', this.pause);
	}
}

class StoryPlayer {
	/**
	 * @param {HTMLElement} slide
	 * @param {{ progressBar: ProgressBar }} config
	 */
	constructor(slide, config = { progressBar: null }) {
		this.slide = slide;
		this.loader = this.slide.querySelector('[data-js-story-loader]');
		this.type = this.slide.dataset.jsStorySlideType;
		this.progressBar = config.progressBar;

		this.imageTimeout = null;
		this.remainingTime = 0;
		this.startTime = null;
		this.imageSlideDuration = 5_000;

		this.state = new Proxy(
			{
				isPlaying: false,
				isLoading: false,
				isLoaded: false,
			},
			{
				get: (target, prop) => {
					return target[prop];
				},
				set: (target, prop, value) => {
					const prevValue = target[prop];

					target[prop] = value;

					if (prevValue !== value) {
						this.updateUI();
					}

					return true;
				},
			}
		);
	}

	/**
	 *
	 * @param {HTMLVideoElement} video
	 */
	loadVideo(video) {
		return new Promise((resolve, reject) => {
			this.state.isLoading = true;

			if (video.querySelector('source')) {
				this.state.isLoading = false;
				this.state.isLoaded = true;

				resolve();
				return;
			}

			const src = video.getAttribute('data-src');
			if (!src) {
				throw new Error('No video source provided');
			}

			const source = document.createElement('source');
			source.src = src;
			source.type = 'video/mp4';
			video.appendChild(source);

			video.load();

			video.addEventListener(
				'canplay',
				() => {
					this.state.isLoading = false;
					this.state.isLoaded = true;

					resolve();
				},
				{ once: true }
			);
		});
	}

	loadImage(imageContainer) {
		return new Promise((resolve, reject) => {
			this.state.isLoading = true;

			if (imageContainer.querySelector('img')) {
				this.state.isLoading = false;
				this.state.isLoaded = true;

				resolve();
				return;
			}

			const src = imageContainer.getAttribute('data-src');
			const srcset = imageContainer.getAttribute('data-srcset');
			const sizes = imageContainer.getAttribute('data-sizes');
			const alt = imageContainer.getAttribute('data-alt') || '';

			if (!src) {
				throw new Error('No image source provided');
			}

			const image = new Image();

			imageContainer.appendChild(image);

			image.src = src;
			image.srcset = srcset;
			image.sizes = sizes;
			image.alt = alt;

			this.state.isLoading = true;

			image.onload = () => {
				this.state.isLoading = false;
				this.state.isLoaded = true;

				resolve();
			};

			image.onerror = () => {
				this.state.isLoading = false;
				this.state.isLoaded = false;
				reject(new Error('Failed to load image'));
			};
		});
	}

	async loadSlideMedia() {
		if (this.type === 'video') {
			await this.loadVideo(this.slide.querySelector('video[data-src]'));
		} else {
			await this.loadImage(this.slide.querySelector('div.story__bg'));
		}
	}

	async play() {
		if (this.type === 'video') {
			// –ï—Å–ª–∏ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ ‚Äî –∑–∞–ø—É—Å–∫–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É (–Ω–æ –Ω–µ –∂–¥–µ–º await)
			if (!this.state.isLoaded) {
				this.loadSlideMedia().then(() => {
					// –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ "–Ω–∞–∂–∞–ª" –∏ –≤–∏–¥–µ–æ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ play, –º–æ–∂–Ω–æ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å
					if (this.state.isPlaying) {
						this.playVideo();
					}
				});
			}

			// ‚ö°Ô∏è –ó–∞–ø—É—Å–∫–∞–µ–º –≤–∏–¥–µ–æ —Å—Ä–∞–∑—É, –ø–æ–∫–∞ Safari —Å—á–∏—Ç–∞–µ—Ç —ç—Ç–æ user gesture
			this.playVideo();
		} else {
			await this.loadSlideMedia();
			this.playImage();
		}
	}

	playVideo() {
		const video = this.slide.querySelector('video');

		this.reset();

		this.progressBar.getElement().classList.add('is-active');

		video.ontimeupdate = () => {
			const progress = video.currentTime / video.duration;
			this.progressBar.setProgress(isNaN(progress) ? 0 : progress);
		};

		video.onended = () => {
			console.log('video onended', video, video.currentTime, video.duration);

			if (video.currentTime <= video.duration - 0.05) return; // safeguard for Safari
			this.progressBar.setProgress(1);
			document.dispatchEvent(
				new CustomEvent('story:next', {
					bubbles: true,
				})
			);
		};

		video.onplaying = () => {
			this.state.isLoading = false;
			this.state.isPlaying = true;
		};

		video.onpause = () => {
			this.state.isPlaying = false;
		};

		video.onwaiting = () => {
			this.state.isLoading = true;
		};

		video.onplay = () => {
			this.state.isLoading = false;
		};

		// üî• –ö—Ä–∏—Ç–∏—á–Ω–æ –¥–ª—è Safari:
		if (video.currentTime >= video.duration) {
			try {
				video.currentTime = 0; // –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ –Ω–µ –≤—ã–∑–æ–≤–µ—Ç onended
			} catch (e) {}
		}

		// üî• –ò –Ω–µ –≤—ã–∑—ã–≤–∞–µ–º play —Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ –ø–æ—Å–ª–µ pointerup
		// —á—É—Ç—å –æ—Ç–∫–ª–∞–¥—ã–≤–∞–µ–º, —á—Ç–æ–±—ã Safari "–æ—Ç–ø—É—Å—Ç–∏–ª" gesture
		setTimeout(() => {
			video.play().catch((err) => {
				console.warn('video play error (Safari workaround):', err);
			});
		}, 50);
	}

	playImage() {
		this.state.isPlaying = true;
		this.progressBar.reset();

		this.progressBar.animateTo(this.imageSlideDuration, () => {
			this.state.isPlaying = false;
			document.dispatchEvent(new CustomEvent('story:next', { bubbles: true }));
		});
	}

	pause() {
		if (this.type === 'video') {
			const video = this.slide.querySelector('video');
			video.pause();
			// video.currentTime = 0;
		} else {
			this.progressBar.stop();
		}
		this.state.isPlaying = false;
	}

	resume() {
		if (this.type === 'video') {
			const video = this.slide.querySelector('video');
			if (video.paused) {
				video.play();
			}
		} else {
			// –í–æ–∑–æ–±–Ω–æ–≤–ª—è–µ–º –∞–Ω–∏–º–∞—Ü–∏—é —Å –æ—Å—Ç–∞–≤—à–µ–≥–æ—Å—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
			const remaining =
				(1 - this.progressBar.progress) * this.imageSlideDuration;

			if (remaining > 0) {
				this.progressBar.animateTo(remaining, () => {
					this.state.isPlaying = false;
					document.dispatchEvent(
						new CustomEvent('story:next', { bubbles: true })
					);
				});
			}
		}
		this.state.isPlaying = true;
	}

	stop() {
		if (this.type === 'video') {
			const video = this.slide.querySelector('video');
			video.pause();
			video.currentTime = video.duration - 0.05;
		} else {
			this.progressBar.stop();
		}
	}

	reset() {
		if (this.type === 'video') {
			const video = this.slide.querySelector('video');
			video.pause();
			video.currentTime = 0;
		} else {
			this.progressBar.reset();
		}
	}

	destroy() {
		if (this.type === 'video') {
			const video = this.slide.querySelector('video');
			video.pause();
			video.innerHTML = '';
		} else {
			this.slide.querySelector('div.story__bg').innerHTML = '';
		}

		this.progressBar.destroy();
	}

	updateUI() {
		this.slide.classList.toggle('is-loading', this.state.isLoading);

		this.slide.classList.toggle('is-paused', !this.state.isPlaying);

		this.slide.classList.toggle('is-playing', this.state.isPlaying);
		this.progressBar.getElement().classList.toggle('is-playing', this.state.isPlaying);
	}
}

class ProgressBar {
	/**
	 *
	 * @param {HTMLElement} element
	 */
	constructor(element) {
		this.element = element;

		if (!this.element) {
			throw new Error('ProgressBar element not found');
		}

		this.progress = 0;
		this.animationFrame = null;
		this.startTime = null;
		this.duration = null;
		this.isPlaying = false;
		this.onComplete = null;

		this.setProgress(this.progress);
	}

	getElement() {
		return this.element;
	}

	setProgress(progress) {
		if (progress < 0) {
			progress = 0;
		}

		if (progress > 1) {
			progress = 1;
		}

		if (progress === this.progress) {
			return;
		}

		this.progress = progress;
		this.element.style.setProperty('--progress', progress * 100 + '%');
	}

	/**
	 * –ó–∞–ø—É—Å–∫–∞–µ—Ç –∞–Ω–∏–º–∞—Ü–∏—é –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–±–∞—Ä–∞
	 * @param {number} duration ‚Äî –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –≤ –º—Å
	 * @param {Function} onComplete ‚Äî –∫–æ–ª–±—ç–∫ –ø–æ—Å–ª–µ –æ–∫–æ–Ω—á–∞–Ω–∏—è
	 */
	animateTo(duration, onComplete = null) {
		this.stop(); // –Ω–∞ —Å–ª—É—á–∞–π –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞

		this.startTime = performance.now();
		this.duration = duration;
		this.isPlaying = true;
		this.onComplete = onComplete;

		if (this.progress >= 1) {
			this.setProgress(1);
			if (typeof onComplete === 'function') onComplete();
			return;
		}

		const startProgress = this.progress; // –≤–∞–∂–Ω—ã–π –º–æ–º–µ–Ω—Ç ‚Äî –∞–Ω–∏–º–∏—Ä—É–µ–º –æ—Ç —Ç–µ–∫—É—â–µ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è
		const remainingFraction = 1 - startProgress;
		// –ó–∞—â–∏—Ç–Ω—ã–π —Å–ª—É—á–∞–π: –µ—Å–ª–∏ –ø–æ –∫–∞–∫–∏–º-—Ç–æ –ø—Ä–∏—á–∏–Ω–∞–º remainingFraction === 0
		if (remainingFraction <= 0) {
			this.setProgress(1);
			if (typeof onComplete === 'function') onComplete();
			return;
		}

		this.setProgress(startProgress);

		const tick = (now) => {
			if (!this.isPlaying) return;

			const elapsed = now - this.startTime;
			const frac = Math.min(elapsed / this.duration, 1);

			// newProgress = start + frac * remaining
			const newProgress = startProgress + frac * remainingFraction;

			this.setProgress(newProgress);

			if (frac < 1) {
				this.animationFrame = requestAnimationFrame(tick);
			} else {
				this.isPlaying = false;
				this.animationFrame = null;
				if (typeof this.onComplete === 'function') {
					this.onComplete();
				}
			}
		};

		this.animationFrame = requestAnimationFrame(tick);
	}

	/**
	 * –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –∞–Ω–∏–º–∞—Ü–∏—é
	 */
	stop() {
		if (this.animationFrame) {
			cancelAnimationFrame(this.animationFrame);
			this.animationFrame = null;
		}
		this.isPlaying = false;
	}

	/**
	 * –°–±—Ä–∞—Å—ã–≤–∞–µ—Ç –ø—Ä–æ–≥—Ä–µ—Å—Å
	 */
	reset() {
		this.stop();
		this.setProgress(0);
	}

	/**
	 * –£–Ω–∏—á—Ç–æ–∂–∞–µ—Ç –ø—Ä–æ–≥—Ä–µ—Å—Å–±–∞—Ä
	 */
	destroy() {
		this.stop();
		this.setProgress(0);
		this.onComplete = null;
		setTimeout(() => {
			this.element = null;
		}, 0);
	}
}
/**
 * –ö–∞—Å—Ç–æ–º–Ω—ã–π Autoplay –¥–ª—è —Å–ª–∞–π–¥–µ—Ä–æ–≤ —Å –æ–¥–Ω–∏–º —Å–ª–∞–π–¥–æ–º
 * –û–±–Ω–æ–≤–ª—è–µ—Ç –ø—Ä–æ–≥—Ä–µ—Å—Å –∏ –ø–µ—Ä–µ–∫–ª—é—á–∞–µ—Ç —Å–ª–∞–π–¥ –ø–æ –∏—Å—Ç–µ—á–µ–Ω–∏–∏ –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞
 */
// class CustomAutoplay {
// 	constructor(splide, options = {}) {
// 		this.splide = splide;
// 		this.interval = options.interval || 5000;
// 		this.isPaused = true;
// 		this.startTime = 0;
// 		this.animationId = null;
// 		this.progress = 0;
// 		this.isMediaLoaded = false; // –§–ª–∞–≥ –∑–∞–≥—Ä—É–∑–∫–∏ –º–µ–¥–∏–∞

// 		// Callbacks
// 		this.onProgress = options.onProgress || (() => {});
// 		this.onComplete = options.onComplete || (() => {});
// 		this.onMediaLoaded = options.onMediaLoaded || (() => {});

// 		this.update = this.update.bind(this);
// 	}

// 	start() {
// 		if (!this.isPaused) return;

// 		// –ó–∞–ø—É—Å–∫–∞–µ–º –∞–≤—Ç–æ–ø–ª–µ–π —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –º–µ–¥–∏–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–æ
// 		if (!this.isMediaLoaded) {
// 			console.log('Autoplay paused: media not loaded yet');
// 			return;
// 		}

// 		this.isPaused = false;
// 		this.startTime = Date.now();
// 		this.progress = 0;
// 		this.animationId = requestAnimationFrame(this.update);
// 	}

// 	pause() {
// 		this.isPaused = true;
// 		if (this.animationId) {
// 			cancelAnimationFrame(this.animationId);
// 			this.animationId = null;
// 		}
// 	}

// 	rewind() {
// 		this.startTime = Date.now();
// 		this.progress = 0;
// 		this.onProgress(0);
// 	}

// 	/**
// 	 * –û—Ç–º–µ—á–∞–µ—Ç –º–µ–¥–∏–∞ –∫–∞–∫ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–µ –∏ –∑–∞–ø—É—Å–∫–∞–µ—Ç –∞–≤—Ç–æ–ø–ª–µ–π –µ—Å–ª–∏ –æ–Ω –±—ã–ª –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω
// 	 */
// 	markMediaAsLoaded() {
// 		this.isMediaLoaded = true;
// 		this.onMediaLoaded();

// 		// –ï—Å–ª–∏ –∞–≤—Ç–æ–ø–ª–µ–π –±—ã–ª –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏–∑-–∑–∞ –Ω–µ–∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–≥–æ –º–µ–¥–∏–∞, –∑–∞–ø—É—Å–∫–∞–µ–º –µ–≥–æ
// 		if (this.isPaused && !this.animationId) {
// 			this.start();
// 		}
// 	}

// 	/**
// 	 * –°–±—Ä–∞—Å—ã–≤–∞–µ—Ç —Ñ–ª–∞–≥ –∑–∞–≥—Ä—É–∑–∫–∏ –º–µ–¥–∏–∞ (–ø—Ä–∏ –ø–µ—Ä–µ—Ö–æ–¥–µ –∫ –Ω–æ–≤–æ–º—É —Å–ª–∞–π–¥—É)
// 	 */
// 	resetMediaLoaded() {
// 		this.isMediaLoaded = false;
// 	}

// 	set(interval) {
// 		this.interval = interval;
// 	}

// 	update() {
// 		if (this.isPaused) return;

// 		const elapsed = Date.now() - this.startTime;
// 		this.progress = Math.min(elapsed / this.interval, 1);

// 		// –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å
// 		this.onProgress(this.progress);

// 		// –ï—Å–ª–∏ –∏–Ω—Ç–µ—Ä–≤–∞–ª –∑–∞–≤–µ—Ä—à–µ–Ω
// 		if (this.progress >= 1) {
// 			this.onComplete();
// 			this.rewind();
// 		}

// 		this.animationId = requestAnimationFrame(this.update);
// 	}

// 	destroy() {
// 		this.pause();
// 	}
// }

// const ROOT_SELECTOR = '[data-js-stories]';
// export default class Stories {
// 	selectors = {
// 		rootSlider: ROOT_SELECTOR,
// 		innerSlider: '[data-js-story]',
// 		storyCta: '[data-js-story-cta]',
// 	};

// 	constructor(element, options = { startSlide: 0 }) {
// 		this.element = element;
// 		this.stories = new Map();
// 		this.activeStoryIndex = options.startSlide;

// 		this.pressStartTime = 0;
// 		this.holdTimeout = null;

// 		this.holdDelay = 300;

// 		// –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
// 		this.lastProgressUpdate = null;
// 		this.lastProgressRate = null;

// 		// –•—Ä–∞–Ω–∏–ª–∏—â–µ –∫–∞—Å—Ç–æ–º–Ω—ã—Ö –∞–≤—Ç–æ–ø–ª–µ–µ–≤ –¥–ª—è —Å–ª–∞–π–¥–µ—Ä–æ–≤ —Å –æ–¥–Ω–∏–º —Å–ª–∞–π–¥–æ–º
// 		this.customAutoplays = new Map();

// 		// –ê–¥–∞–ø—Ç–∏–≤–Ω–∞—è –ø—Ä–µ–¥–∑–∞–≥—Ä—É–∑–∫–∞
// 		this.isMobile = this.checkIsMobile();
// 		this.preloadedStories = new Set(); // –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º –ø—Ä–µ–¥–∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ –∏—Å—Ç–æ—Ä–∏–∏
// 		this.preloadedSlides = new Set(); // –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º –ø—Ä–µ–¥–∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ —Å–ª–∞–π–¥—ã

// 		this.root = new Splide(this.element, {
// 			width: '465rem',
// 			perMove: 1,
// 			perPage: 1,
// 			pagination: false,
// 			arrows: false,
// 			speed: 0,
// 			drag: false,
// 			breakpoints: {
// 				479: {
// 					width: '100vw',
// 					padding: 0,
// 					gap: 0,
// 				},
// 			},
// 		});

// 		this.root.on('moved', this.onMovedRootSlider);
// 		this.root.on('move', this.onMoveRootSlider);
// 		this.root.on('move', this.updateRootSlidesScale);
// 		this.root.on('click', this.onRootClick);

// 		this.element
// 			.querySelectorAll(this.selectors.innerSlider)
// 			.forEach((element, index) => {
// 				const slides = element.querySelectorAll('.splide__slide');
// 				const hasMultipleSlides = slides.length > 1;

// 				const instance = new Splide(element, {
// 					perPage: 1,
// 					perMove: 1,
// 					type: 'fade',
// 					autoWidth: true,
// 					pagination: true,
// 					width: '465rem',
// 					arrows: false,
// 					autoplay: hasMultipleSlides, // –í–∫–ª—é—á–∞–µ–º –∞–≤—Ç–æ–ø–ª–µ–π —Ç–æ–ª—å–∫–æ –¥–ª—è –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö —Å–ª–∞–π–¥–æ–≤
// 					pauseOnHover: false,
// 					drag: false,
// 					// –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –≤–∫–ª—é—á–∞–µ–º –ø–∞–≥–∏–Ω–∞—Ü–∏—é –¥–∞–∂–µ –¥–ª—è –æ–¥–Ω–æ–≥–æ —Å–ª–∞–π–¥–∞
// 					classes: {
// 						pagination: 'splide__pagination',
// 						page: 'splide__pagination__page',
// 					},
// 				});

// 				this.stories.set(index, instance);

// 				instance.on('mounted', () => {
// 					// –î–ª—è —Å–ª–∞–π–¥–µ—Ä–æ–≤ —Å –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–º–∏ —Å–ª–∞–π–¥–∞–º–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –∞–≤—Ç–æ–ø–ª–µ–π
// 					if (hasMultipleSlides) {
// 						instance.Components.Autoplay.pause();
// 					} else {
// 						// –î–ª—è —Å–ª–∞–π–¥–µ—Ä–æ–≤ —Å –æ–¥–Ω–∏–º —Å–ª–∞–π–¥–æ–º —Å–æ–∑–¥–∞–µ–º –∫–∞—Å—Ç–æ–º–Ω—ã–π –∞–≤—Ç–æ–ø–ª–µ–π
// 						this.createCustomAutoplayForSingleSlide(instance, index);
// 					}
// 				});

// 				instance.mount();

// 				instance.on('move', (newIndex, prevIndex) => {
// 					const activeStory = this.stories.get(this.activeStoryIndex);
// 					const slides = activeStory.Components.Slides.get();

// 					for (let i = 0; i < slides.length; i++) {
// 						const splideSlide = slides[i];

// 						const slide = splideSlide.slide;
// 						const isActiveSlide = splideSlide.index === newIndex;

// 						// –ó–∞–≥—Ä—É–∂–∞–µ–º –º–µ–¥–∏–∞ –¥–ª—è –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Å–ª–∞–π–¥–∞
// 						if (isActiveSlide) {
// 							this.loadSlideMedia(
// 								slide,
// 								this.activeStoryIndex,
// 								splideSlide.index
// 							)
// 								.then(() => {
// 									const video = this.hasVideo(slide);
// 									if (video) {
// 										this.handleVideoPlayback(video, slide, activeStory);
// 									}

// 									// –ê–¥–∞–ø—Ç–∏–≤–Ω–∞—è –ø—Ä–µ–¥–∑–∞–≥—Ä—É–∑–∫–∞ –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Å–ª–∞–π–¥–∞
// 									if (this.isMobile) {
// 										// –ù–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö –ø—Ä–µ–¥–∑–∞–≥—Ä—É–∂–∞–µ–º —Å–ª–µ–¥—É—é—â–∏–π —Å–ª–∞–π–¥
// 										this.preloadMobile(this.activeStoryIndex);
// 									}
// 								})
// 								.catch((error) => {
// 									console.warn('Failed to load slide media on move:', error);
// 									// –ü—Ä–∏ –æ—à–∏–±–∫–µ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —Å–ª–∞–π–¥—É
// 									setTimeout(() => {
// 										activeStory.go('>');
// 									}, 2000);
// 								});
// 						} else {
// 							// –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤–∏–¥–µ–æ –≤ –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö —Å–ª–∞–π–¥–∞—Ö
// 							const video = this.hasVideo(slide);
// 							if (video) {
// 								video.pause();
// 								video.currentTime = 0;
// 								// –°–∫—Ä—ã–≤–∞–µ–º –ª–æ–∞–¥–µ—Ä –ø—Ä–∏ –ø–∞—É–∑–µ
// 								const loader = slide.querySelector('[data-js-video-loader]');
// 								if (loader) {
// 									loader.classList.remove('is-active');
// 								}
// 							}
// 						}
// 					}
// 				});

// 				instance.on('moved', () => {
// 					const activeStory = this.stories.get(this.activeStoryIndex);
// 					activeStory.Components.Autoplay.play();
// 					// –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –∏–Ω—Ç–µ—Ä–≤–∞–ª –¥–ª—è –Ω–æ–≤–æ–≥–æ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Å–ª–∞–π–¥–∞
// 					this.setSlideInterval();
// 				});
// 			});

// 		this.root.mount();

// 		this.openStory(this.activeStoryIndex);

// 		this.bindEvents();
// 	}

// 	bindEvents() {
// 		window.addEventListener('dialogClose', this.onDialogClose);
// 		window.addEventListener('resize', this.onWindowResize);
// 	}

// 	onDialogClose = () => {
// 		this.destroy();
// 	};

// 	onWindowResize = () => {
// 		const wasMobile = this.isMobile;
// 		this.isMobile = this.checkIsMobile();

// 		// –ï—Å–ª–∏ –∏–∑–º–µ–Ω–∏–ª—Å—è —Ç–∏–ø —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞, –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–µ–¥–∑–∞–≥—Ä—É–∑–∫—É
// 		if (wasMobile !== this.isMobile) {
// 			this.adaptivePreload(this.activeStoryIndex);
// 		}
// 	};

// 	destroy() {
// 		window.removeEventListener('dialogClose', this.onDialogClose);
// 		window.removeEventListener('resize', this.onWindowResize);

// 		// –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Å–µ –≤–∏–¥–µ–æ –∏ —Å–±—Ä–∞—Å—ã–≤–∞–µ–º —Ç–∞–π–º–µ—Ä—ã –ø–µ—Ä–µ–¥ —É–Ω–∏—á—Ç–æ–∂–µ–Ω–∏–µ–º
// 		this.stopAllVideos();

// 		// –£–Ω–∏—á—Ç–æ–∂–∞–µ–º –∫–∞—Å—Ç–æ–º–Ω—ã–µ –∞–≤—Ç–æ–ø–ª–µ–∏
// 		this.customAutoplays.forEach((customAutoplay) => {
// 			customAutoplay.destroy();
// 		});
// 		this.customAutoplays.clear();

// 		// –û—á–∏—â–∞–µ–º –∫—ç—à –ø—Ä–µ–¥–∑–∞–≥—Ä—É–∑–∫–∏
// 		this.preloadedStories.clear();
// 		this.preloadedSlides.clear();

// 		this.root.destroy();
// 		this.stories.forEach((storySplide) => {
// 			storySplide.root.removeEventListener('pointerdown', this.onPointerDown);
// 			storySplide.destroy();
// 		});
// 		this.stories.clear();

// 		setTimeout(() => {
// 			this.root = null;
// 			this.element = null;
// 		});
// 	}

// 	onMoveRootSlider = () => {
// 		this.stories.forEach((splide, index) => {
// 			// –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –∞–≤—Ç–æ–ø–ª–µ–π
// 			splide.Components.Autoplay.pause();

// 			// –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–∞—Å—Ç–æ–º–Ω—ã–π –∞–≤—Ç–æ–ø–ª–µ–π –µ—Å–ª–∏ –µ—Å—Ç—å
// 			const customAutoplay = this.customAutoplays.get(index);
// 			if (customAutoplay) {
// 				customAutoplay.pause();
// 			}

// 			splide.Components.Slides.get().forEach((splideSlide) => {
// 				const video = this.hasVideo(splideSlide.slide);

// 				if (video) {
// 					video.pause();
// 					video.currentTime = 0;
// 				}
// 			});
// 		});
// 	};

// 	onMovedRootSlider = (newIndex, prevIndex, destIndex) => {
// 		// –ê–≤—Ç–æ–ø–ª–µ–π –∑–∞–ø—É—Å—Ç–∏—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ –º–µ–¥–∏–∞ –≤ playActiveSlideVideo
// 		// –ù–µ –∑–∞–ø—É—Å–∫–∞–µ–º –∞–≤—Ç–æ–ø–ª–µ–π –∑–¥–µ—Å—å, —Ç–∞–∫ –∫–∞–∫ –º–µ–¥–∏–∞ –º–æ–∂–µ—Ç –±—ã—Ç—å –µ—â–µ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ
// 		this.clearHold();
// 	};

// 	setupProgressbars = (newIndex) => {
// 		const activeStory = this.stories.get(this.activeStoryIndex);
// 		const { items } = activeStory.Components.Pagination;

// 		items.forEach((item, index) => {
// 			if (index > newIndex) {
// 				item.button.style.setProperty('--progress', 0);
// 			}

// 			if (index < newIndex) {
// 				item.button.style.setProperty('--progress', 1);
// 			}
// 		});
// 	};

// 	updateRootSlidesScale = (newIndex) => {
// 		const slides = this.root.Components.Slides.get();

// 		slides.forEach((slide, i) => {
// 			if (i === newIndex) {
// 				slide.slide.classList.add('is-active');
// 			} else {
// 				slide.slide.classList.remove('is-active');
// 			}
// 		});
// 	};

// 	onRootClick = (slide) => {
// 		setTimeout(() => {
// 			if (this.root.state.is(Splide.STATES.MOVING)) {
// 				return;
// 			}

// 			if (this.activeStoryIndex !== slide.index) {
// 				this.openStory(slide.index);
// 			}
// 		}, 0);
// 	};

// 	/**
// 	 *
// 	 * @param {PointerEvent} event
// 	 */
// 	onPointerDown = (event) => {
// 		console.log(event.target);

// 		if (
// 			event.target.closest(this.selectors.storyCta) ||
// 			event.target.closest('.splide__pagination__page')
// 		) {
// 			return;
// 		}

// 		event.preventDefault();
// 		event.stopPropagation();

// 		this.pressStartTime = Date.now();

// 		const activeStory = this.stories.get(this.activeStoryIndex);

// 		const { Autoplay } = activeStory.Components;
// 		const video = this.hasVideo(
// 			activeStory.Components.Slides.getAt(activeStory.index).slide
// 		);

// 		this.holdTimeout = setTimeout(() => {
// 			// –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∞–≤—Ç–æ–ø–ª–µ–π (—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –∏–ª–∏ –∫–∞—Å—Ç–æ–º–Ω—ã–π)
// 			const customAutoplay = this.customAutoplays.get(this.activeStoryIndex);
// 			if (customAutoplay) {
// 				customAutoplay.pause();
// 			} else {
// 				Autoplay.pause();
// 			}

// 			if (video) {
// 				video.pause();
// 				video.currentTime = 0;
// 			}
// 		}, this.holdDelay);

// 		const onPointerUp = (event) => {
// 			this.clearHold();

// 			const pressDuration = Date.now() - this.pressStartTime;
// 			const containerWidth = activeStory.root.offsetWidth;

// 			if (pressDuration < this.holdDelay) {
// 				if (event.offsetX < containerWidth / 2) {
// 					if (activeStory.index === 0) {
// 						// –ï—Å–ª–∏ —ç—Ç–æ –ø–µ—Ä–≤—ã–π —Å–ª–∞–π–¥ –ø–µ—Ä–≤–æ–π –∏—Å—Ç–æ—Ä–∏–∏, —Å–±—Ä–∞—Å—ã–≤–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å –∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º
// 						if (this.activeStoryIndex === 0) {
// 							this.restartCurrentStory();
// 						} else {
// 							this.openStory(this.activeStoryIndex - 1);
// 						}
// 					} else {
// 						activeStory.go('<');
// 					}
// 				} else {
// 					if (activeStory.index === activeStory.length - 1) {
// 						this.openStory(this.activeStoryIndex + 1);
// 					} else {
// 						activeStory.go('>');
// 					}
// 				}
// 			} else {
// 				// –í–æ–∑–æ–±–Ω–æ–≤–ª—è–µ–º –∞–≤—Ç–æ–ø–ª–µ–π (—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –∏–ª–∏ –∫–∞—Å—Ç–æ–º–Ω—ã–π) —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –º–µ–¥–∏–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–æ
// 				const customAutoplay = this.customAutoplays.get(this.activeStoryIndex);
// 				if (customAutoplay) {
// 					// –î–ª—è –∫–∞—Å—Ç–æ–º–Ω–æ–≥–æ –∞–≤—Ç–æ–ø–ª–µ—è –ø—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≥—Ä—É–∑–∫—É –º–µ–¥–∏–∞
// 					if (customAutoplay.isMediaLoaded) {
// 						customAutoplay.start();
// 					}
// 				} else {
// 					// –î–ª—è —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–≥–æ –∞–≤—Ç–æ–ø–ª–µ—è –∑–∞–ø—É—Å–∫–∞–µ–º —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –º–µ–¥–∏–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–æ
// 					const activeSlide = activeStory.Components.Slides.getAt(
// 						activeStory.index
// 					).slide;
// 					const hasMedia =
// 						activeSlide.querySelector('video[src]') ||
// 						activeSlide.querySelector('.story__bg--loaded img') ||
// 						(!activeSlide.querySelector('video[data-src]') &&
// 							!activeSlide.querySelector('.story__bg--placeholder[data-src]'));

// 					if (hasMedia) {
// 						Autoplay.play();
// 					}
// 				}
// 				video?.play();
// 			}
// 		};

// 		activeStory.root.addEventListener('pointerup', onPointerUp, {
// 			once: true,
// 		});
// 	};

// 	clearHold = () => {
// 		clearTimeout(this.holdTimeout);
// 		this.holdTimeout = null;
// 	};

// 	openStory(index = 0) {
// 		if (index >= this.root.length) {
// 			DialogCollection.getDialogsById('storiesDialog').close();
// 			return;
// 		}

// 		if (index < 0) {
// 			index = 0;
// 		}

// 		// –£–¥–∞–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –æ—Ç –ø—Ä–µ–¥—ã–¥—É—â–µ–π –∏—Å—Ç–æ—Ä–∏–∏ (–µ—Å–ª–∏ –æ–Ω–∞ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç)
// 		if (this.activeStoryIndex !== undefined) {
// 			const activeStory = this.stories.get(this.activeStoryIndex);
// 			if (activeStory) {
// 				activeStory.root.removeEventListener('pointerdown', this.onPointerDown);
// 				activeStory.off('autoplay:playing', this.updateProgress);
// 				activeStory.off('moved', this.setupProgressbars);
// 			}
// 		}

// 		this.activeStoryIndex = index;

// 		this.root.go(this.activeStoryIndex);

// 		this.root.options.speed = 400;

// 		const currentStory = this.stories.get(index);

// 		// currentStory.go(0);

// 		// –°–±—Ä–∞—Å—ã–≤–∞–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –¥–ª—è –Ω–æ–≤–æ–π –∏—Å—Ç–æ—Ä–∏–∏
// 		this.lastProgressUpdate = null;
// 		this.lastProgressRate = null;

// 		// –ó–∞–ø—É—Å–∫–∞–µ–º –≤–∏–¥–µ–æ –≤ –∞–∫—Ç–∏–≤–Ω–æ–º —Å–ª–∞–π–¥–µ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ –∏—Å—Ç–æ—Ä–∏–∏
// 		this.playActiveSlideVideo(currentStory);

// 		// –ê–¥–∞–ø—Ç–∏–≤–Ω–∞—è –ø—Ä–µ–¥–∑–∞–≥—Ä—É–∑–∫–∞ –º–µ–¥–∏–∞
// 		this.adaptivePreload(index);

// 		// –û—á–∏—â–∞–µ–º –¥–∞–ª–µ–∫–∏–µ –∏—Å—Ç–æ—Ä–∏–∏ –¥–ª—è —ç–∫–æ–Ω–æ–º–∏–∏ –ø–∞–º—è—Ç–∏
// 		this.cleanupDistantStories(index);

// 		// –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∫–∞—Å—Ç–æ–º–Ω—ã–π –∞–≤—Ç–æ–ø–ª–µ–π –¥–ª—è —ç—Ç–æ–π –∏—Å—Ç–æ—Ä–∏–∏
// 		const customAutoplay = this.customAutoplays.get(index);
// 		if (customAutoplay) {
// 			// –î–ª—è —Å–ª–∞–π–¥–µ—Ä–æ–≤ —Å –æ–¥–Ω–∏–º —Å–ª–∞–π–¥–æ–º —Å–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–ª–∞–≥ –∑–∞–≥—Ä—É–∑–∫–∏ –º–µ–¥–∏–∞
// 			customAutoplay.resetMediaLoaded();
// 			// –ê–≤—Ç–æ–ø–ª–µ–π –∑–∞–ø—É—Å—Ç–∏—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ –º–µ–¥–∏–∞ –≤ playActiveSlideVideo
// 		} else {
// 			// –î–ª—è —Å–ª–∞–π–¥–µ—Ä–æ–≤ —Å –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–º–∏ —Å–ª–∞–π–¥–∞–º–∏ –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∏–Ω—Ç–µ—Ä–≤–∞–ª
// 			this.setSlideInterval();
// 			// –ê–≤—Ç–æ–ø–ª–µ–π –∑–∞–ø—É—Å—Ç–∏—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ –º–µ–¥–∏–∞ –≤ playActiveSlideVideo
// 			this.stories.get(index).on('autoplay:playing', this.updateProgress);
// 			this.stories.get(index).on('moved', this.setupProgressbars);
// 		}

// 		currentStory.root.addEventListener('pointerdown', this.onPointerDown);
// 	}

// 	hasVideo(slide) {
// 		return slide.querySelector('video');
// 	}

// 	/**
// 	 * –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –º–æ–±–∏–ª—å–Ω—ã–º
// 	 * @returns {boolean} - true –µ—Å–ª–∏ –º–æ–±–∏–ª—å–Ω–æ–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ
// 	 */
// 	checkIsMobile() {
// 		return window.innerWidth < 768;
// 	}

// 	/**
// 	 * –ü–æ–ª—É—á–∞–µ—Ç —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —Å–ª–∞–π–¥–∞
// 	 * @param {number} storyIndex - –∏–Ω–¥–µ–∫—Å –∏—Å—Ç–æ—Ä–∏–∏
// 	 * @param {number} slideIndex - –∏–Ω–¥–µ–∫—Å —Å–ª–∞–π–¥–∞
// 	 * @returns {string} - —É–Ω–∏–∫–∞–ª—å–Ω—ã–π ID
// 	 */
// 	getSlideId(storyIndex, slideIndex) {
// 		return `${storyIndex}-${slideIndex}`;
// 	}

// 	/**
// 	 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –∑–∞–≥—Ä—É–∂–µ–Ω –ª–∏ —Å–ª–∞–π–¥
// 	 * @param {number} storyIndex - –∏–Ω–¥–µ–∫—Å –∏—Å—Ç–æ—Ä–∏–∏
// 	 * @param {number} slideIndex - –∏–Ω–¥–µ–∫—Å —Å–ª–∞–π–¥–∞
// 	 * @returns {boolean} - true –µ—Å–ª–∏ —Å–ª–∞–π–¥ –∑–∞–≥—Ä—É–∂–µ–Ω
// 	 */
// 	isSlidePreloaded(storyIndex, slideIndex) {
// 		return this.preloadedSlides.has(this.getSlideId(storyIndex, slideIndex));
// 	}

// 	/**
// 	 * –û—Ç–º–µ—á–∞–µ—Ç —Å–ª–∞–π–¥ –∫–∞–∫ –ø—Ä–µ–¥–∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–π
// 	 * @param {number} storyIndex - –∏–Ω–¥–µ–∫—Å –∏—Å—Ç–æ—Ä–∏–∏
// 	 * @param {number} slideIndex - –∏–Ω–¥–µ–∫—Å —Å–ª–∞–π–¥–∞
// 	 */
// 	markSlideAsPreloaded(storyIndex, slideIndex) {
// 		this.preloadedSlides.add(this.getSlideId(storyIndex, slideIndex));
// 	}

// 	/**
// 	 * –£–≤–µ–¥–æ–º–ª—è–µ—Ç –∫–∞—Å—Ç–æ–º–Ω—ã–π –∞–≤—Ç–æ–ø–ª–µ–π –æ –∑–∞–≥—Ä—É–∑–∫–µ –º–µ–¥–∏–∞
// 	 * @param {number} storyIndex - –∏–Ω–¥–µ–∫—Å –∏—Å—Ç–æ—Ä–∏–∏
// 	 */
// 	notifyCustomAutoplayMediaLoaded(storyIndex) {
// 		const customAutoplay = this.customAutoplays.get(storyIndex);
// 		if (customAutoplay) {
// 			customAutoplay.markMediaAsLoaded();
// 		}
// 	}

// 	/**
// 	 * –£–ø—Ä–∞–≤–ª—è–µ—Ç —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–º –∞–≤—Ç–æ–ø–ª–µ–µ–º Splide –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∑–∞–≥—Ä—É–∑–∫–∏ –º–µ–¥–∏–∞
// 	 * @param {number} storyIndex - –∏–Ω–¥–µ–∫—Å –∏—Å—Ç–æ—Ä–∏–∏
// 	 * @param {boolean} isMediaLoaded - –∑–∞–≥—Ä—É–∂–µ–Ω–æ –ª–∏ –º–µ–¥–∏–∞
// 	 */
// 	manageStandardAutoplay(storyIndex, isMediaLoaded) {
// 		const story = this.stories.get(storyIndex);
// 		if (!story) return;

// 		if (isMediaLoaded) {
// 			// –ï—Å–ª–∏ –º–µ–¥–∏–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–æ –∏ —ç—Ç–æ –∞–∫—Ç–∏–≤–Ω–∞—è –∏—Å—Ç–æ—Ä–∏—è, –∑–∞–ø—É—Å–∫–∞–µ–º –∞–≤—Ç–æ–ø–ª–µ–π
// 			if (storyIndex === this.activeStoryIndex) {
// 				story.Components.Autoplay.play();
// 			}
// 		} else {
// 			// –ï—Å–ª–∏ –º–µ–¥–∏–∞ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ, –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∞–≤—Ç–æ–ø–ª–µ–π
// 			story.Components.Autoplay.pause();
// 		}
// 	}

// 	/**
// 	 * –ó–∞–≥—Ä—É–∂–∞–µ—Ç –º–µ–¥–∏–∞-—Ñ–∞–π–ª (–≤–∏–¥–µ–æ –∏–ª–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ) –¥–ª—è —Å–ª–∞–π–¥–∞
// 	 * @param {HTMLElement} slide - —ç–ª–µ–º–µ–Ω—Ç —Å–ª–∞–π–¥–∞
// 	 * @param {number} storyIndex - –∏–Ω–¥–µ–∫—Å –∏—Å—Ç–æ—Ä–∏–∏ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
// 	 * @param {number} slideIndex - –∏–Ω–¥–µ–∫—Å —Å–ª–∞–π–¥–∞ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
// 	 * @returns {Promise} - –ø—Ä–æ–º–∏—Å –∑–∞–≥—Ä—É–∑–∫–∏ –º–µ–¥–∏–∞
// 	 */
// 	loadSlideMedia(slide, storyIndex = null, slideIndex = null) {
// 		return new Promise((resolve, reject) => {
// 			// –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω –ª–∏ —É–∂–µ —Å–ª–∞–π–¥
// 			if (
// 				storyIndex !== null &&
// 				slideIndex !== null &&
// 				this.isSlidePreloaded(storyIndex, slideIndex)
// 			) {
// 				// –ï—Å–ª–∏ –º–µ–¥–∏–∞ —É–∂–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ, —É–≤–µ–¥–æ–º–ª—è–µ–º –∞–≤—Ç–æ–ø–ª–µ–π
// 				this.notifyCustomAutoplayMediaLoaded(storyIndex);
// 				this.manageStandardAutoplay(storyIndex, true);
// 				resolve();
// 				return;
// 			}

// 			// –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∞–≤—Ç–æ–ø–ª–µ–π –¥–æ –∑–∞–≥—Ä—É–∑–∫–∏ –º–µ–¥–∏–∞
// 			if (storyIndex !== null) {
// 				this.manageStandardAutoplay(storyIndex, false);
// 			}

// 			const video = slide.querySelector('video[data-src]');
// 			const imagePlaceholder = slide.querySelector(
// 				'.story__bg--placeholder[data-src]'
// 			);

// 			if (video) {
// 				this.loadVideo(video)
// 					.then(() => {
// 						if (storyIndex !== null && slideIndex !== null) {
// 							this.markSlideAsPreloaded(storyIndex, slideIndex);
// 						}
// 						// –£–≤–µ–¥–æ–º–ª—è–µ–º –∞–≤—Ç–æ–ø–ª–µ–π –æ –∑–∞–≥—Ä—É–∑–∫–µ –≤–∏–¥–µ–æ
// 						this.notifyCustomAutoplayMediaLoaded(storyIndex);
// 						this.manageStandardAutoplay(storyIndex, true);
// 						resolve();
// 					})
// 					.catch(reject);
// 			} else if (imagePlaceholder) {
// 				this.loadImage(imagePlaceholder)
// 					.then(() => {
// 						if (storyIndex !== null && slideIndex !== null) {
// 							this.markSlideAsPreloaded(storyIndex, slideIndex);
// 						}
// 						// –£–≤–µ–¥–æ–º–ª—è–µ–º –∞–≤—Ç–æ–ø–ª–µ–π –æ –∑–∞–≥—Ä—É–∑–∫–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
// 						this.notifyCustomAutoplayMediaLoaded(storyIndex);
// 						this.manageStandardAutoplay(storyIndex, true);
// 						resolve();
// 					})
// 					.catch(reject);
// 			} else {
// 				// –ï—Å–ª–∏ –º–µ–¥–∏–∞ —É–∂–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ –∏–ª–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç
// 				if (storyIndex !== null && slideIndex !== null) {
// 					this.markSlideAsPreloaded(storyIndex, slideIndex);
// 				}
// 				// –£–≤–µ–¥–æ–º–ª—è–µ–º –∞–≤—Ç–æ–ø–ª–µ–π –æ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –º–µ–¥–∏–∞
// 				this.notifyCustomAutoplayMediaLoaded(storyIndex);
// 				this.manageStandardAutoplay(storyIndex, true);
// 				resolve();
// 			}
// 		});
// 	}

// 	/**
// 	 * –ó–∞–≥—Ä—É–∂–∞–µ—Ç –≤–∏–¥–µ–æ –¥–ª—è —Å–ª–∞–π–¥–∞
// 	 * @param {HTMLVideoElement} video - —ç–ª–µ–º–µ–Ω—Ç –≤–∏–¥–µ–æ
// 	 * @returns {Promise} - –ø—Ä–æ–º–∏—Å –∑–∞–≥—Ä—É–∑–∫–∏ –≤–∏–¥–µ–æ
// 	 */
// 	loadVideo(video) {
// 		return new Promise((resolve, reject) => {
// 			const src = video.getAttribute('data-src');
// 			if (!src) {
// 				reject(new Error('No video source provided'));
// 				return;
// 			}

// 			// –ï—Å–ª–∏ –≤–∏–¥–µ–æ —É–∂–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ
// 			if (video.src) {
// 				resolve();
// 				return;
// 			}

// 			// –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ª–æ–∞–¥–µ—Ä
// 			const loader = video.parentElement.querySelector(
// 				'[data-js-video-loader]'
// 			);
// 			if (loader) {
// 				loader.classList.add('is-active');
// 			}

// 			// –°–æ–∑–¥–∞–µ–º source —ç–ª–µ–º–µ–Ω—Ç
// 			const source = document.createElement('source');
// 			source.src = src;
// 			source.type = 'video/mp4';
// 			video.appendChild(source);

// 			// –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∑–∞–≥—Ä—É–∑–∫–∏
// 			const handleLoad = () => {
// 				video.removeEventListener('canplay', handleLoad);
// 				video.removeEventListener('error', handleError);
// 				if (loader) {
// 					loader.classList.remove('is-active');
// 				}
// 				resolve();
// 			};

// 			const handleError = () => {
// 				video.removeEventListener('canplay', handleLoad);
// 				video.removeEventListener('error', handleError);
// 				if (loader) {
// 					loader.classList.remove('is-active');
// 				}
// 				reject(new Error('Failed to load video'));
// 			};

// 			video.addEventListener('canplay', handleLoad);
// 			video.addEventListener('error', handleError);

// 			// –ó–∞–≥—Ä—É–∂–∞–µ–º –≤–∏–¥–µ–æ
// 			video.load();
// 		});
// 	}

// 	/**
// 	 * –ó–∞–≥—Ä—É–∂–∞–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è —Å–ª–∞–π–¥–∞
// 	 * @param {HTMLElement} placeholder - —ç–ª–µ–º–µ–Ω—Ç-–ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä
// 	 * @returns {Promise} - –ø—Ä–æ–º–∏—Å –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
// 	 */
// 	loadImage(placeholder) {
// 		return new Promise((resolve, reject) => {
// 			const src = placeholder.getAttribute('data-src');
// 			const srcset = placeholder.getAttribute('data-srcset');
// 			const sizes = placeholder.getAttribute('data-sizes');
// 			const alt = placeholder.getAttribute('data-alt') || '';

// 			if (!src) {
// 				reject(new Error('No image source provided'));
// 				return;
// 			}

// 			// –ï—Å–ª–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —É–∂–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ
// 			if (placeholder.querySelector('img')) {
// 				resolve();
// 				return;
// 			}

// 			const img = new Image();

// 			img.onload = () => {
// 				// –ó–∞–º–µ–Ω—è–µ–º –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
// 				placeholder.innerHTML = '';
// 				placeholder.classList.remove('story__bg--placeholder');
// 				placeholder.classList.add('story__bg--loaded');
// 				img.className = 'story__bg';
// 				img.alt = alt;
// 				placeholder.appendChild(img);

// 				// –î–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å –¥–ª—è –ø–ª–∞–≤–Ω–æ–≥–æ –ø–æ—è–≤–ª–µ–Ω–∏—è
// 				setTimeout(() => {
// 					img.classList.add('loaded');
// 					resolve();
// 				}, 50);
// 			};

// 			img.onerror = () => {
// 				// –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—à–∏–±–∫—É –∑–∞–≥—Ä—É–∑–∫–∏
// 				placeholder.innerHTML = `
// 					<div class="story__bg-error">
// 						<div class="story__bg-error-icon">‚ö†Ô∏è</div>
// 						<div class="story__bg-error-text">–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è</div>
// 					</div>
// 				`;
// 				placeholder.classList.add('story__bg--error');
// 				reject(new Error('Failed to load image'));
// 			};

// 			img.src = src;
// 			img.srcset = srcset;
// 			img.sizes = sizes;
// 		});
// 	}

// 	/**
// 	 * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –≤–∏–¥–µ–æ –≤ —Å–ª–∞–π–¥–µ
// 	 * @param {HTMLVideoElement} video - —ç–ª–µ–º–µ–Ω—Ç –≤–∏–¥–µ–æ
// 	 * @param {HTMLElement} slide - —ç–ª–µ–º–µ–Ω—Ç —Å–ª–∞–π–¥–∞
// 	 * @param {Splide} activeStory - –∞–∫—Ç–∏–≤–Ω–∞—è –∏—Å—Ç–æ—Ä–∏—è
// 	 */
// 	handleVideoPlayback(video, slide, activeStory) {
// 		const loader = slide.querySelector('[data-js-video-loader]');

// 		// –î–æ–±–∞–≤–ª—è–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –±—É—Ñ–µ—Ä–∏–∑–∞—Ü–∏–∏ –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–Ω—ã—Ö –≤–∏–¥–µ–æ
// 		if (!video.hasAttribute('data-buffering-monitor')) {
// 			let bufferingStartTime = null;
// 			let bufferingTimeout = null;

// 			const handleWaiting = () => {
// 				// –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ª–æ–∞–¥–µ—Ä –ø—Ä–∏ –±—É—Ñ–µ—Ä–∏–∑–∞—Ü–∏–∏
// 				if (loader) {
// 					loader.classList.add('is-active');
// 				}

// 				if (!bufferingStartTime) {
// 					bufferingStartTime = Date.now();

// 					bufferingTimeout = setTimeout(() => {
// 						if (loader) {
// 							loader.classList.remove('is-active');
// 						}
// 						activeStory.go('>');
// 					}, 5000);
// 				}
// 			};

// 			const handleCanPlay = () => {
// 				// –°–∫—Ä—ã–≤–∞–µ–º –ª–æ–∞–¥–µ—Ä –∫–æ–≥–¥–∞ –≤–∏–¥–µ–æ –≥–æ—Ç–æ–≤–æ
// 				if (loader) {
// 					loader.classList.remove('is-active');
// 				}

// 				if (bufferingStartTime) {
// 					bufferingStartTime = null;
// 					if (bufferingTimeout) {
// 						clearTimeout(bufferingTimeout);
// 						bufferingTimeout = null;
// 					}
// 				}

// 				// –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä–≤–∞–ª –∫–∞—Å—Ç–æ–º–Ω–æ–≥–æ –∞–≤—Ç–æ–ø–ª–µ—è –µ—Å–ª–∏ —ç—Ç–æ —Å–ª–∞–π–¥–µ—Ä —Å –æ–¥–Ω–∏–º —Å–ª–∞–π–¥–æ–º
// 				const customAutoplay = this.customAutoplays.get(this.activeStoryIndex);
// 				if (customAutoplay) {
// 					this.updateCustomAutoplayInterval(this.activeStoryIndex);
// 				}
// 			};

// 			video.addEventListener('waiting', handleWaiting);
// 			video.addEventListener('canplay', handleCanPlay);
// 			video.setAttribute('data-buffering-monitor', 'true');
// 		}

// 		video.play().catch((error) => {
// 			// –°–∫—Ä—ã–≤–∞–µ–º –ª–æ–∞–¥–µ—Ä –ø—Ä–∏ –æ—à–∏–±–∫–µ
// 			if (loader) {
// 				loader.classList.remove('is-active');
// 			}
// 			// –ï—Å–ª–∏ –≤–∏–¥–µ–æ –Ω–µ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è, –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —Å–ª–∞–π–¥—É
// 			setTimeout(() => {
// 				activeStory.go('>');
// 			}, 3000);
// 		});
// 	}

// 	/**
// 	 * –ê–¥–∞–ø—Ç–∏–≤–Ω–∞—è –ø—Ä–µ–¥–∑–∞–≥—Ä—É–∑–∫–∞ –º–µ–¥–∏–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞
// 	 * @param {number} currentStoryIndex - –∏–Ω–¥–µ–∫—Å —Ç–µ–∫—É—â–µ–π –∏—Å—Ç–æ—Ä–∏–∏
// 	 */
// 	adaptivePreload(currentStoryIndex) {
// 		if (this.isMobile) {
// 			this.preloadMobile(currentStoryIndex);
// 		} else {
// 			this.preloadDesktop(currentStoryIndex);
// 		}
// 	}

// 	/**
// 	 * –ü—Ä–µ–¥–∑–∞–≥—Ä—É–∑–∫–∞ –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤
// 	 * @param {number} currentStoryIndex - –∏–Ω–¥–µ–∫—Å —Ç–µ–∫—É—â–µ–π –∏—Å—Ç–æ—Ä–∏–∏
// 	 */
// 	preloadMobile(currentStoryIndex) {
// 		const currentStory = this.stories.get(currentStoryIndex);
// 		if (!currentStory) return;

// 		const currentSlideIndex = currentStory.index;
// 		const slides = currentStory.Components.Slides.get();

// 		// –ü—Ä–µ–¥–∑–∞–≥—Ä—É–∂–∞–µ–º —Ç–æ–ª—å–∫–æ —Å–ª–µ–¥—É—é—â–∏–π —Å–ª–∞–π–¥ –≤ —Ç–µ–∫—É—â–µ–π –∏—Å—Ç–æ—Ä–∏–∏
// 		const nextSlideIndex = currentSlideIndex + 1;
// 		if (nextSlideIndex < slides.length) {
// 			const nextSlide = slides[nextSlideIndex]?.slide;
// 			if (
// 				nextSlide &&
// 				!this.isSlidePreloaded(currentStoryIndex, nextSlideIndex)
// 			) {
// 				this.loadSlideMedia(nextSlide, currentStoryIndex, nextSlideIndex).catch(
// 					(error) => {
// 						console.warn('Failed to preload next slide on mobile:', error);
// 					}
// 				);
// 			}
// 		}
// 	}

// 	/**
// 	 * –ü—Ä–µ–¥–∑–∞–≥—Ä—É–∑–∫–∞ –¥–ª—è –¥–µ—Å–∫—Ç–æ–ø–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤
// 	 * @param {number} currentStoryIndex - –∏–Ω–¥–µ–∫—Å —Ç–µ–∫—É—â–µ–π –∏—Å—Ç–æ—Ä–∏–∏
// 	 */
// 	preloadDesktop(currentStoryIndex) {
// 		// –ü—Ä–µ–¥–∑–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–≤—ã–π —Å–ª–∞–π–¥ —Å–æ—Å–µ–¥–Ω–∏—Ö –∏—Å—Ç–æ—Ä–∏–π
// 		const prevStoryIndex = currentStoryIndex - 1;
// 		const nextStoryIndex = currentStoryIndex + 1;

// 		// –ü—Ä–µ–¥–∑–∞–≥—Ä—É–∂–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â—É—é –∏—Å—Ç–æ—Ä–∏—é
// 		if (prevStoryIndex >= 0) {
// 			this.preloadStoryFirstSlide(prevStoryIndex);
// 		}

// 		// –ü—Ä–µ–¥–∑–∞–≥—Ä—É–∂–∞–µ–º —Å–ª–µ–¥—É—é—â—É—é –∏—Å—Ç–æ—Ä–∏—é
// 		if (nextStoryIndex < this.root.length) {
// 			this.preloadStoryFirstSlide(nextStoryIndex);
// 		}

// 		// –ó–∞–≥—Ä—É–∂–∞–µ–º –≤—Å–µ —Å–ª–∞–π–¥—ã —Ç–µ–∫—É—â–µ–π –∏—Å—Ç–æ—Ä–∏–∏
// 		this.preloadCurrentStoryAllSlides(currentStoryIndex);
// 	}

// 	/**
// 	 * –ü—Ä–µ–¥–∑–∞–≥—Ä—É–∂–∞–µ—Ç –ø–µ—Ä–≤—ã–π —Å–ª–∞–π–¥ –∏—Å—Ç–æ—Ä–∏–∏
// 	 * @param {number} storyIndex - –∏–Ω–¥–µ–∫—Å –∏—Å—Ç–æ—Ä–∏–∏
// 	 */
// 	preloadStoryFirstSlide(storyIndex) {
// 		if (this.preloadedStories.has(storyIndex)) return;

// 		const story = this.stories.get(storyIndex);
// 		if (!story) return;

// 		const slides = story.Components.Slides.get();
// 		if (slides.length > 0) {
// 			const firstSlide = slides[0]?.slide;
// 			if (firstSlide && !this.isSlidePreloaded(storyIndex, 0)) {
// 				this.loadSlideMedia(firstSlide, storyIndex, 0)
// 					.then(() => {
// 						this.preloadedStories.add(storyIndex);
// 					})
// 					.catch((error) => {
// 						console.warn(
// 							`Failed to preload first slide of story ${storyIndex}:`,
// 							error
// 						);
// 					});
// 			}
// 		}
// 	}

// 	/**
// 	 * –ü—Ä–µ–¥–∑–∞–≥—Ä—É–∂–∞–µ—Ç –≤—Å–µ —Å–ª–∞–π–¥—ã —Ç–µ–∫—É—â–µ–π –∏—Å—Ç–æ—Ä–∏–∏
// 	 * @param {number} storyIndex - –∏–Ω–¥–µ–∫—Å –∏—Å—Ç–æ—Ä–∏–∏
// 	 */
// 	preloadCurrentStoryAllSlides(storyIndex) {
// 		const story = this.stories.get(storyIndex);
// 		if (!story) return;

// 		const slides = story.Components.Slides.get();
// 		slides.forEach((splideSlide, slideIndex) => {
// 			const slide = splideSlide.slide;
// 			if (slide && !this.isSlidePreloaded(storyIndex, slideIndex)) {
// 				this.loadSlideMedia(slide, storyIndex, slideIndex).catch((error) => {
// 					console.warn(
// 						`Failed to preload slide ${slideIndex} of story ${storyIndex}:`,
// 						error
// 					);
// 				});
// 			}
// 		});
// 	}

// 	/**
// 	 * –û—á–∏—â–∞–µ—Ç –ø—Ä–µ–¥–∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ –º–µ–¥–∏–∞ –¥–ª—è –∏—Å—Ç–æ—Ä–∏–π, –∫–æ—Ç–æ—Ä—ã–µ –Ω–∞—Ö–æ–¥—è—Ç—Å—è –¥–∞–ª–µ–∫–æ –æ—Ç —Ç–µ–∫—É—â–µ–π
// 	 * @param {number} currentStoryIndex - –∏–Ω–¥–µ–∫—Å —Ç–µ–∫—É—â–µ–π –∏—Å—Ç–æ—Ä–∏–∏
// 	 */
// 	cleanupDistantStories(currentStoryIndex) {
// 		const keepRange = 1; // –î–µ—Ä–∂–∏–º –≤ –∫—ç—à–µ —Ç–µ–∫—É—â—É—é ¬±1 –∏—Å—Ç–æ—Ä–∏—é

// 		this.preloadedStories.forEach((storyIndex) => {
// 			if (Math.abs(storyIndex - currentStoryIndex) > keepRange) {
// 				this.cleanupStoryMedia(storyIndex);
// 				this.preloadedStories.delete(storyIndex);
// 			}
// 		});

// 		// –û—á–∏—â–∞–µ–º —Å–ª–∞–π–¥—ã –¥–∞–ª–µ–∫–∏—Ö –∏—Å—Ç–æ—Ä–∏–π
// 		this.preloadedSlides.forEach((slideId) => {
// 			const [storyIndex] = slideId.split('-').map(Number);
// 			if (Math.abs(storyIndex - currentStoryIndex) > keepRange) {
// 				this.preloadedSlides.delete(slideId);
// 			}
// 		});
// 	}

// 	/**
// 	 * –û—á–∏—â–∞–µ—Ç –º–µ–¥–∏–∞ –∏—Å—Ç–æ—Ä–∏–∏
// 	 * @param {number} storyIndex - –∏–Ω–¥–µ–∫—Å –∏—Å—Ç–æ—Ä–∏–∏
// 	 */
// 	cleanupStoryMedia(storyIndex) {
// 		const story = this.stories.get(storyIndex);
// 		if (!story) return;

// 		const slides = story.Components.Slides.get();
// 		slides.forEach((splideSlide) => {
// 			const slide = splideSlide.slide;
// 			const video = slide.querySelector('video');
// 			if (video) {
// 				video.pause();
// 				video.currentTime = 0;
// 				// –û—á–∏—â–∞–µ–º src –¥–ª—è –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏—è –ø–∞–º—è—Ç–∏
// 				video.removeAttribute('src');
// 				video.load();
// 			}
// 		});
// 	}

// 	/**
// 	 * –°–æ–∑–¥–∞–µ—Ç –∫–∞—Å—Ç–æ–º–Ω—ã–π –∞–≤—Ç–æ–ø–ª–µ–π –¥–ª—è —Å–ª–∞–π–¥–µ—Ä–∞ —Å –æ–¥–Ω–∏–º —Å–ª–∞–π–¥–æ–º
// 	 * @param {Splide} instance - —ç–∫–∑–µ–º–ø–ª—è—Ä Splide
// 	 * @param {number} index - –∏–Ω–¥–µ–∫—Å –∏—Å—Ç–æ—Ä–∏–∏
// 	 */
// 	createCustomAutoplayForSingleSlide(instance, index) {
// 		const slide = instance.Components.Slides.get()[0]?.slide;
// 		if (!slide) return;

// 		const interval = this.getSlideInterval(slide);

// 		const customAutoplay = new CustomAutoplay(instance, {
// 			interval: interval,
// 			onProgress: (rate) => {
// 				// –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä
// 				this.updateProgress(rate);
// 			},
// 			onComplete: () => {
// 				// –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Ç–µ–∫—É—â–∞—è –∏—Å—Ç–æ—Ä–∏—è –ø–æ—Å–ª–µ–¥–Ω–µ–π
// 				if (this.activeStoryIndex === this.root.length - 1) {
// 					// –ï—Å–ª–∏ —ç—Ç–æ –ø–æ—Å–ª–µ–¥–Ω—è—è –∏—Å—Ç–æ—Ä–∏—è, –∑–∞–∫—Ä—ã–≤–∞–µ–º –¥–∏–∞–ª–æ–≥
// 					DialogCollection.getDialogsById('storiesDialog').close();
// 				} else {
// 					// –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–π –∏—Å—Ç–æ—Ä–∏–∏
// 					this.openStory(this.activeStoryIndex + 1);
// 				}
// 			},
// 			onMediaLoaded: () => {
// 				console.log(`Media loaded for story ${index}, starting autoplay`);
// 			},
// 		});

// 		// –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ –∫–∞—Å—Ç–æ–º–Ω—ã–π –∞–≤—Ç–æ–ø–ª–µ–π
// 		this.customAutoplays.set(index, customAutoplay);

// 		// –ù–ï –∑–∞–ø—É—Å–∫–∞–µ–º –∞–≤—Ç–æ–ø–ª–µ–π —Å—Ä–∞–∑—É - –∂–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –º–µ–¥–∏–∞
// 		// –ê–≤—Ç–æ–ø–ª–µ–π –∑–∞–ø—É—Å—Ç–∏—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ –º–µ–¥–∏–∞ –≤ loadSlideMedia
// 	}

// 	/**
// 	 * –û–±–Ω–æ–≤–ª—è–µ—Ç –∏–Ω—Ç–µ—Ä–≤–∞–ª –∫–∞—Å—Ç–æ–º–Ω–æ–≥–æ –∞–≤—Ç–æ–ø–ª–µ—è –¥–ª—è —Å–ª–∞–π–¥–µ—Ä–∞ —Å –æ–¥–Ω–∏–º —Å–ª–∞–π–¥–æ–º
// 	 * –í—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ –≤–∏–¥–µ–æ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞ –Ω–∞ –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –≤–∏–¥–µ–æ
// 	 * @param {number} index - –∏–Ω–¥–µ–∫—Å –∏—Å—Ç–æ—Ä–∏–∏
// 	 */
// 	updateCustomAutoplayInterval(index) {
// 		const customAutoplay = this.customAutoplays.get(index);
// 		if (!customAutoplay) return;

// 		const instance = this.stories.get(index);
// 		const slide = instance.Components.Slides.get()[0]?.slide;
// 		if (!slide) return;

// 		const newInterval = this.getSlideInterval(slide);

// 		// –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä–≤–∞–ª –∏ —Å–±—Ä–∞—Å—ã–≤–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å –¥–æ 0
// 		customAutoplay.set(newInterval);
// 		customAutoplay.rewind();

// 		// –ï—Å–ª–∏ —ç—Ç–æ –∞–∫—Ç–∏–≤–Ω–∞—è –∏—Å—Ç–æ—Ä–∏—è, –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º –∞–≤—Ç–æ–ø–ª–µ–π —Å –Ω–æ–≤—ã–º –∏–Ω—Ç–µ—Ä–≤–∞–ª–æ–º
// 		if (index === this.activeStoryIndex) {
// 			customAutoplay.start();
// 		}
// 	}

// 	/**
// 	 * –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ—Ç —Ç–µ–∫—É—â—É—é –∏—Å—Ç–æ—Ä–∏—é —Å –ø–µ—Ä–≤–æ–≥–æ —Å–ª–∞–π–¥–∞
// 	 * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∫–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∫–ª–∏–∫–∞–µ—Ç –Ω–∞ –ª–µ–≤—É—é –ø–æ–ª–æ–≤–∏–Ω—É –ø–µ—Ä–≤–æ–≥–æ —Å–ª–∞–π–¥–∞ –ø–µ—Ä–≤–æ–π –∏—Å—Ç–æ—Ä–∏–∏
// 	 */
// 	restartCurrentStory() {
// 		const activeStory = this.stories.get(this.activeStoryIndex);

// 		// –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ–∫—É—â–∏–π –∞–≤—Ç–æ–ø–ª–µ–π
// 		const customAutoplay = this.customAutoplays.get(this.activeStoryIndex);
// 		if (customAutoplay) {
// 			customAutoplay.pause();
// 		} else {
// 			activeStory.Components.Autoplay.pause();
// 		}

// 		// –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏ —Å–±—Ä–∞—Å—ã–≤–∞–µ–º –≤–∏–¥–µ–æ
// 		const slides = activeStory.Components.Slides.get();
// 		slides.forEach((splideSlide) => {
// 			const video = this.hasVideo(splideSlide.slide);
// 			if (video) {
// 				video.pause();
// 				video.currentTime = 0;
// 				// –°–∫—Ä—ã–≤–∞–µ–º –ª–æ–∞–¥–µ—Ä
// 				const loader = splideSlide.slide.querySelector(
// 					'[data-js-video-loader]'
// 				);
// 				if (loader) {
// 					loader.classList.remove('is-active');
// 				}
// 			}
// 		});

// 		// –°–±—Ä–∞—Å—ã–≤–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä—ã
// 		const { items } = activeStory.Components.Pagination;
// 		items.forEach((item) => {
// 			item.button.style.setProperty('--progress', 0);
// 		});

// 		// –°–±—Ä–∞—Å—ã–≤–∞–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
// 		this.lastProgressUpdate = null;
// 		this.lastProgressRate = null;

// 		// –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –ø–µ—Ä–≤–æ–º—É —Å–ª–∞–π–¥—É
// 		activeStory.go(0);

// 		// –ó–∞–ø—É—Å–∫–∞–µ–º –≤–∏–¥–µ–æ –≤ –ø–µ—Ä–≤–æ–º —Å–ª–∞–π–¥–µ
// 		this.playActiveSlideVideo(activeStory);

// 		// –ê–≤—Ç–æ–ø–ª–µ–π –∑–∞–ø—É—Å—Ç–∏—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ –º–µ–¥–∏–∞ –≤ playActiveSlideVideo
// 		// –ù–µ –∑–∞–ø—É—Å–∫–∞–µ–º –∞–≤—Ç–æ–ø–ª–µ–π –∑–¥–µ—Å—å, —Ç–∞–∫ –∫–∞–∫ –º–µ–¥–∏–∞ –º–æ–∂–µ—Ç –±—ã—Ç—å –µ—â–µ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ
// 	}

// 	/**
// 	 * –°–æ–∑–¥–∞–µ—Ç –∫–∞—Å—Ç–æ–º–Ω—ã–π –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä –¥–ª—è —Å–ª–∞–π–¥–∞
// 	 * @param {HTMLElement} slide - —ç–ª–µ–º–µ–Ω—Ç —Å–ª–∞–π–¥–∞
// 	 * @param {number} rate - —Ç–µ–∫—É—â–∏–π –ø—Ä–æ–≥—Ä–µ—Å—Å (0-1)
// 	 */
// 	createCustomProgressBar(slide, rate) {
// 		// –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ —Å–æ–∑–¥–∞–Ω –ª–∏ —É–∂–µ –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä
// 		if (slide.querySelector('.story__progress-bar')) {
// 			return;
// 		}

// 		const progressBar = document.createElement('div');
// 		progressBar.className = 'story__progress-bar';
// 		progressBar.style.cssText = `
// 			position: absolute;
// 			top: 20rem;
// 			left: 20rem;
// 			right: 20rem;
// 			height: 4rem;
// 			background: rgba(255, 255, 255, 0.3);
// 			border-radius: 2rem;
// 			overflow: hidden;
// 			z-index: 5;
// 		`;

// 		const progressFill = document.createElement('div');
// 		progressFill.className = 'story__progress-fill';
// 		progressFill.style.cssText = `
// 			height: 100%;
// 			background: var(--white);
// 			border-radius: 2rem;
// 			width: ${rate * 100}%;
// 			transition: width 0.1s ease;
// 		`;

// 		progressBar.appendChild(progressFill);
// 		slide.appendChild(progressBar);
// 	}

// 	/**
// 	 * –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –≤—Å–µ –≤–∏–¥–µ–æ –≤–æ –≤—Å–µ—Ö –∏—Å—Ç–æ—Ä–∏—è—Ö –∏ —Å–±—Ä–∞—Å—ã–≤–∞–µ—Ç –∏—Ö —Ç–∞–π–º–µ—Ä—ã
// 	 */
// 	stopAllVideos() {
// 		this.stories.forEach((storySplide, index) => {
// 			// –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –∞–≤—Ç–æ–ø–ª–µ–π
// 			storySplide.Components.Autoplay.pause();

// 			// –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–∞—Å—Ç–æ–º–Ω—ã–π –∞–≤—Ç–æ–ø–ª–µ–π –µ—Å–ª–∏ –µ—Å—Ç—å
// 			const customAutoplay = this.customAutoplays.get(index);
// 			if (customAutoplay) {
// 				customAutoplay.pause();
// 			}

// 			// –°–±—Ä–∞—Å—ã–≤–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä—ã
// 			const { items } = storySplide.Components.Pagination;
// 			items.forEach((item) => {
// 				item.button.style.setProperty('--progress', 0);
// 			});

// 			// –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Å–µ –≤–∏–¥–µ–æ –≤ —Å–ª–∞–π–¥–∞—Ö
// 			const slides = storySplide.Components.Slides.get();
// 			slides.forEach((splideSlide) => {
// 				const video = this.hasVideo(splideSlide.slide);
// 				if (video) {
// 					video.pause();
// 					video.currentTime = 0;
// 				}
// 			});
// 		});
// 	}

// 	/**
// 	 * –ó–∞–ø—É—Å–∫–∞–µ—Ç –≤–∏–¥–µ–æ –≤ –∞–∫—Ç–∏–≤–Ω–æ–º —Å–ª–∞–π–¥–µ –∏—Å—Ç–æ—Ä–∏–∏
// 	 * @param {Splide} storyInstance - —ç–∫–∑–µ–º–ø–ª—è—Ä –∏—Å—Ç–æ—Ä–∏–∏
// 	 */
// 	playActiveSlideVideo(storyInstance) {
// 		const activeSlideIndex = storyInstance.index;
// 		const activeSlide =
// 			storyInstance.Components.Slides.get()[activeSlideIndex]?.slide;

// 		if (!activeSlide) {
// 			console.warn('Active slide not found');
// 			return;
// 		}

// 		// –°–Ω–∞—á–∞–ª–∞ –∑–∞–≥—Ä—É–∂–∞–µ–º –º–µ–¥–∏–∞-—Ñ–∞–π–ª –¥–ª—è —Å–ª–∞–π–¥–∞
// 		this.loadSlideMedia(activeSlide, this.activeStoryIndex, activeSlideIndex)
// 			.then(() => {
// 				const video = this.hasVideo(activeSlide);

// 				if (video) {
// 					// –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–æ–≤—ã–π –º–µ—Ç–æ–¥ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è –≤–∏–¥–µ–æ
// 					this.handleVideoPlayback(video, activeSlide, storyInstance);
// 				}

// 				// –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä–≤–∞–ª –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ (–¥–ª—è –≤–∏–¥–µ–æ –∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π)
// 				const customAutoplay = this.customAutoplays.get(this.activeStoryIndex);
// 				if (customAutoplay) {
// 					// –î–ª—è —Å–ª–∞–π–¥–µ—Ä–æ–≤ —Å –æ–¥–Ω–∏–º —Å–ª–∞–π–¥–æ–º –æ–±–Ω–æ–≤–ª—è–µ–º –∫–∞—Å—Ç–æ–º–Ω—ã–π –∞–≤—Ç–æ–ø–ª–µ–π
// 					this.updateCustomAutoplayInterval(this.activeStoryIndex);
// 				} else {
// 					// –î–ª—è —Å–ª–∞–π–¥–µ—Ä–æ–≤ —Å –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–º–∏ —Å–ª–∞–π–¥–∞–º–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –º–µ—Ç–æ–¥
// 					this.setSlideInterval();
// 				}
// 			})
// 			.catch((error) => {
// 				console.warn('Failed to load slide media:', error);
// 				// –ü—Ä–∏ –æ—à–∏–±–∫–µ –∑–∞–≥—Ä—É–∑–∫–∏ –º–µ–¥–∏–∞ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —Å–ª–∞–π–¥—É
// 				setTimeout(() => {
// 					storyInstance.go('>');
// 				}, 2000);
// 			});
// 	}

// 	getSlideInterval = (slideEl) => {
// 		const video = slideEl.querySelector('video');
// 		if (video) {
// 			const duration = video.duration;

// 			// –ü—Ä–æ–≤–µ—Ä—è–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å –≤–∏–¥–µ–æ
// 			if (
// 				video.readyState >= 1 &&
// 				duration &&
// 				!isNaN(duration) &&
// 				isFinite(duration) &&
// 				duration > 0
// 			) {
// 				return duration * 1000;
// 			}

// 			// –ï—Å–ª–∏ –≤–∏–¥–µ–æ –µ—Å—Ç—å, –Ω–æ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã, –∏—Å–ø–æ–ª—å–∑—É–µ–º —É–≤–µ–ª–∏—á–µ–Ω–Ω—ã–π fallback
// 			if (video.readyState === 0) {
// 				return 10_000; // 10 —Å–µ–∫—É–Ω–¥ –¥–ª—è –≤–∏–¥–µ–æ, –∫–æ—Ç–æ—Ä—ã–µ –µ—â–µ –∑–∞–≥—Ä—É–∂–∞—é—Ç—Å—è
// 			}
// 		}
// 		return 5_000; // fallback –Ω–∞ 5s –¥–ª—è –æ–±—ã—á–Ω—ã—Ö —Å–ª–∞–π–¥–æ–≤
// 	};

// 	setSlideInterval = () => {
// 		const activeStory = this.stories.get(this.activeStoryIndex);
// 		const activeSlideIndex = activeStory.index;
// 		const activeSlide =
// 			activeStory.Components.Slides.get()[activeSlideIndex].slide;

// 		const newInterval = this.getSlideInterval(activeSlide);

// 		// –ò—Å–ø–æ–ª—å–∑—É–µ–º data-–∞—Ç—Ä–∏–±—É—Ç –º–µ—Ç–æ–¥ (–±–æ–ª–µ–µ –Ω–∞–¥–µ–∂–Ω—ã–π)
// 		activeSlide.setAttribute('data-splide-interval', newInterval);
// 		activeStory.options.interval = newInterval;

// 		// –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –≤—ã–∑—ã–≤–∞–µ–º —Å–æ–±—ã—Ç–∏–µ move –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞
// 		activeStory.emit('move', activeSlideIndex, activeSlideIndex);
// 	};

// 	updateProgress = (rate) => {
// 		const activeStory = this.stories.get(this.activeStoryIndex);
// 		const activePaginationButton =
// 			activeStory.Components.Pagination.items[activeStory.index]?.button;

// 		// –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∫–Ω–æ–ø–∫–∞ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏
// 		if (activePaginationButton) {
// 			// –í—Å–µ–≥–¥–∞ –æ–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä
// 			activePaginationButton.style.setProperty('--progress', rate);
// 		} else {
// 			// –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π —Å–ø–æ—Å–æ–±: –∏—â–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä –≤ DOM
// 			const activeSlide =
// 				activeStory.Components.Slides.get()[activeStory.index]?.slide;
// 			if (activeSlide) {
// 				const customProgressBar = activeSlide.querySelector(
// 					'.story__progress-bar'
// 				);
// 				if (customProgressBar) {
// 					// –û–±–Ω–æ–≤–ª—è–µ–º –∫–∞—Å—Ç–æ–º–Ω—ã–π –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä
// 					const progressFill = customProgressBar.querySelector(
// 						'.story__progress-fill'
// 					);
// 					if (progressFill) {
// 						progressFill.style.width = `${rate * 100}%`;
// 					}
// 				} else {
// 					// –°–æ–∑–¥–∞–µ–º –∫–∞—Å—Ç–æ–º–Ω—ã–π –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
// 					this.createCustomProgressBar(activeSlide, rate);
// 				}
// 			}
// 		}

// 		// –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞: –µ—Å–ª–∏ –ø—Ä–æ–≥—Ä–µ—Å—Å –Ω–µ –¥–≤–∏–∂–µ—Ç—Å—è –±–æ–ª—å—à–µ 10 —Å–µ–∫—É–Ω–¥
// 		// (—ç—Ç–æ –º–æ–∂–µ—Ç —É–∫–∞–∑—ã–≤–∞—Ç—å –Ω–∞ –∑–∞–≤–∏—Å—à–µ–µ –≤–∏–¥–µ–æ)
// 		if (!this.lastProgressUpdate) {
// 			this.lastProgressUpdate = Date.now();
// 			this.lastProgressRate = rate;
// 		} else {
// 			const timeSinceLastUpdate = Date.now() - this.lastProgressUpdate;

// 			// –ï—Å–ª–∏ –ø—Ä–æ–≥—Ä–µ—Å—Å –Ω–µ –∏–∑–º–µ–Ω–∏–ª—Å—è –±–æ–ª—å—à–µ 10 —Å–µ–∫—É–Ω–¥ –∏ —ç—Ç–æ –Ω–µ –∫–æ–Ω–µ—Ü —Å–ª–∞–π–¥–∞
// 			if (
// 				timeSinceLastUpdate > 10000 &&
// 				rate === this.lastProgressRate &&
// 				rate < 0.95
// 			) {
// 				activeStory.go('>');
// 				return;
// 			}

// 			// –û–±–Ω–æ–≤–ª—è–µ–º –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
// 			if (rate !== this.lastProgressRate) {
// 				this.lastProgressUpdate = Date.now();
// 				this.lastProgressRate = rate;
// 			}
// 		}

// 		// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Å–ª–∞–π–¥–∞
// 		if (rate === 1) {
// 			// –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∫–∞—Å—Ç–æ–º–Ω—ã–π –∞–≤—Ç–æ–ø–ª–µ–π (—Å–ª–∞–π–¥–µ—Ä —Å –æ–¥–Ω–∏–º —Å–ª–∞–π–¥–æ–º)
// 			const customAutoplay = this.customAutoplays.get(this.activeStoryIndex);
// 			if (customAutoplay) {
// 				// –î–ª—è —Å–ª–∞–π–¥–µ—Ä–æ–≤ —Å –æ–¥–Ω–∏–º —Å–ª–∞–π–¥–æ–º –ø–µ—Ä–µ—Ö–æ–¥ –∫ —Å–ª–µ–¥—É—é—â–µ–π –∏—Å—Ç–æ—Ä–∏–∏ —É–∂–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è –≤ onComplete
// 				return;
// 			}

// 			// –î–ª—è —Å–ª–∞–π–¥–µ—Ä–æ–≤ —Å –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–º–∏ —Å–ª–∞–π–¥–∞–º–∏
// 			// –ï—Å–ª–∏ —ç—Ç–æ –ø–æ—Å–ª–µ–¥–Ω–∏–π —Å–ª–∞–π–¥ –≤ –∏—Å—Ç–æ—Ä–∏–∏
// 			if (activeStory.index === activeStory.length - 1) {
// 				// –ï—Å–ª–∏ —ç—Ç–æ –ø–æ—Å–ª–µ–¥–Ω—è—è –∏—Å—Ç–æ—Ä–∏—è, –∑–∞–∫—Ä—ã–≤–∞–µ–º –¥–∏–∞–ª–æ–≥
// 				if (this.activeStoryIndex === this.root.length - 1) {
// 					activeStory.off('autoplay:playing', this.updateProgress);
// 					DialogCollection.getDialogsById('storiesDialog').close();
// 				} else {
// 					// –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–π –∏—Å—Ç–æ—Ä–∏–∏
// 					activeStory.off('autoplay:playing', this.updateProgress);
// 					this.openStory(this.activeStoryIndex + 1);
// 				}
// 			} else {
// 				// –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —Å–ª–∞–π–¥—É –≤ —Ç–æ–π –∂–µ –∏—Å—Ç–æ—Ä–∏–∏
// 				activeStory.go('>');
// 			}
// 		}
// 	};
// }
