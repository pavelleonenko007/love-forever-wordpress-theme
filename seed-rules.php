<?php
/**
 * Seed —Å–∫—Ä–∏–ø—Ç –¥–ª—è –º–∞—Å—Å–æ–≤–æ–≥–æ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –ø—Ä–∞–≤–∏–ª –∞–≤—Ç–æ–∫–∞—Ç–µ–≥–æ—Ä–∏–∑–∞—Ü–∏–∏
 * 
 * –ó–∞–ø—É—Å–∫ —á–µ—Ä–µ–∑ –±—Ä–∞—É–∑–µ—Ä: https://your-site.com/wp-content/themes/loveforever/seed-rules.php
 * –ó–∞–ø—É—Å–∫ —á–µ—Ä–µ–∑ –∫–æ–º–∞–Ω–¥–Ω—É—é —Å—Ç—Ä–æ–∫—É: php seed-rules.php
 */

// –ü–æ–¥–∫–ª—é—á–∞–µ–º WordPress
require_once( dirname( __FILE__ ) . '/../../../wp-load.php' );

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤)
if ( ! current_user_can( 'manage_options' ) ) {
	wp_die( '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –æ–ø–µ—Ä–∞—Ü–∏–∏.' );
}

// –ü–æ–ª—É—á–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä –¥–µ–π—Å—Ç–≤–∏—è
$action = isset( $_GET['action'] ) ? sanitize_text_field( $_GET['action'] ) : '';

// –ï—Å–ª–∏ –∑–∞–ø—É—Å–∫ —á–µ—Ä–µ–∑ –∫–æ–º–∞–Ω–¥–Ω—É—é —Å—Ç—Ä–æ–∫—É
if ( php_sapi_name() === 'cli' ) {
	$action = isset( $argv[1] ) ? $argv[1] : '';
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
function output_message( $message, $type = 'info' ) {
	if ( php_sapi_name() === 'cli' ) {
		echo $message . PHP_EOL;
	} else {
		$color = $type === 'success' ? 'green' : ( $type === 'error' ? 'red' : 'blue' );
		echo '<div style="color: ' . $color . '; margin: 5px 0;">' . esc_html( $message ) . '</div>';
	}
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä–∞
function show_progress( $current, $total, $label = '' ) {
	$percentage = round( ( $current / $total ) * 100, 1 );
	
	if ( php_sapi_name() === 'cli' ) {
		echo "\r{$label}: {$current}/{$total} ({$percentage}%)";
		if ( $current >= $total ) {
			echo PHP_EOL;
		}
	} else {
		echo '<div style="margin: 5px 0;">';
		echo '<div style="background: #f0f0f0; border: 1px solid #ccc; height: 20px; position: relative;">';
		echo '<div style="background: #0073aa; height: 100%; width: ' . $percentage . '%;"></div>';
		echo '<div style="position: absolute; top: 0; left: 0; right: 0; text-align: center; line-height: 18px; font-size: 12px;">';
		echo esc_html( $label . ': ' . $current . '/' . $total . ' (' . $percentage . '%)' );
		echo '</div></div></div>';
	}
}

// –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞
switch ( $action ) {
	case 'apply_auto_rules':
		apply_auto_rules_to_all_dresses();
		break;
	case 'apply_price_rules':
		apply_price_rules_to_all_dresses();
		break;
	case 'apply_all_rules':
		apply_all_rules_to_all_dresses();
		break;
	default:
		show_usage_instructions();
}

/**
 * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é
 */
function show_usage_instructions() {
	output_message( 'üéØ Seed —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –ø—Ä–∞–≤–∏–ª –∞–≤—Ç–æ–∫–∞—Ç–µ–≥–æ—Ä–∏–∑–∞—Ü–∏–∏', 'info' );
	output_message( '', 'info' );
	output_message( '–î–æ—Å—Ç—É–ø–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è:', 'info' );
	output_message( '- apply_auto_rules - –ü—Ä–∏–º–µ–Ω–∏—Ç—å –ø—Ä–∞–≤–∏–ª–∞ –∞–≤—Ç–æ–∫–∞—Ç–µ–≥–æ—Ä–∏–∑–∞—Ü–∏–∏ (–±–µ–π–¥–∂–∏, —Ñ–∏–ª—å—Ç—Ä—ã)', 'info' );
	output_message( '- apply_price_rules - –ü—Ä–∏–º–µ–Ω–∏—Ç—å —Ü–µ–Ω–æ–≤—ã–µ –ø—Ä–∞–≤–∏–ª–∞', 'info' );
	output_message( '- apply_all_rules - –ü—Ä–∏–º–µ–Ω–∏—Ç—å –≤—Å–µ –ø—Ä–∞–≤–∏–ª–∞', 'info' );
	output_message( '', 'info' );
	output_message( '–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:', 'info' );
	output_message( '–ß–µ—Ä–µ–∑ –±—Ä–∞—É–∑–µ—Ä: ?action=apply_all_rules', 'info' );
	output_message( '–ß–µ—Ä–µ–∑ –∫–æ–º–∞–Ω–¥–Ω—É—é —Å—Ç—Ä–æ–∫—É: php seed-rules.php apply_all_rules', 'info' );
}

/**
 * –ü—Ä–∏–º–µ–Ω—è–µ—Ç –ø—Ä–∞–≤–∏–ª–∞ –∞–≤—Ç–æ–∫–∞—Ç–µ–≥–æ—Ä–∏–∑–∞—Ü–∏–∏ –∫–æ –≤—Å–µ–º –ø–ª–∞—Ç—å—è–º
 */
function apply_auto_rules_to_all_dresses() {
	output_message( 'üöÄ –ù–∞—á–∏–Ω–∞–µ–º –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª –∞–≤—Ç–æ–∫–∞—Ç–µ–≥–æ—Ä–∏–∑–∞—Ü–∏–∏ –∫–æ –≤—Å–µ–º –ø–ª–∞—Ç—å—è–º...', 'info' );
	
	// –ü–æ–ª—É—á–∞–µ–º –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–ª–∞—Ç—å–µ–≤
	$total_dresses = wp_count_posts( 'dress' )->publish;
	
	if ( $total_dresses === 0 ) {
		output_message( '–ü–ª–∞—Ç—å—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.', 'error' );
		return;
	}
	
	output_message( 'üìã –ù–∞–π–¥–µ–Ω–æ ' . $total_dresses . ' –ø–ª–∞—Ç—å–µ–≤ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏.', 'info' );
	
	$processed = 0;
	$updated = 0;
	$batch_size = 10; // –†–∞–∑–º–µ—Ä –±–∞—Ç—á–∞
	$offset = 0;
	
	// –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –ø–ª–∞—Ç—å—è –±–∞—Ç—á–∞–º–∏
	while ( $processed < $total_dresses ) {
		// –ü–æ–ª—É—á–∞–µ–º –±–∞—Ç—á –ø–ª–∞—Ç—å–µ–≤
		$dresses = get_posts( array(
			'post_type'      => 'dress',
			'numberposts'    => $batch_size,
			'offset'         => $offset,
			'post_status'    => 'publish',
			'fields'         => 'ids',
			'orderby'        => 'ID',
			'order'          => 'ASC',
		) );
		
		if ( empty( $dresses ) ) {
			break;
		}
		
		foreach ( $dresses as $dress_id ) {
			// –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å
			show_progress( $processed + 1, $total_dresses, '–ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª –∞–≤—Ç–æ–∫–∞—Ç–µ–≥–æ—Ä–∏–∑–∞—Ü–∏–∏' );
			
			// –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
			$current_categories = get_field( 'dress_category', $dress_id );
			$current_categories = is_array( $current_categories ) ? $current_categories : array();
			
			// –ü—Ä–∏–º–µ–Ω—è–µ–º –ø—Ä–∞–≤–∏–ª–∞ –∞–≤—Ç–æ–∫–∞—Ç–µ–≥–æ—Ä–∏–∑–∞—Ü–∏–∏
			$new_categories = apply_auto_rules_to_single_dress( $dress_id, $current_categories );
			
			// –ï—Å–ª–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏–∑–º–µ–Ω–∏–ª–∏—Å—å, –æ–±–Ω–æ–≤–ª—è–µ–º
			if ( $new_categories !== $current_categories ) {
				update_field( 'dress_category', $new_categories, $dress_id );
				wp_set_post_terms( $dress_id, $new_categories, 'dress_category' );
				$updated++;
			}
			
			$processed++;
		}
		
		$offset += $batch_size;
		
		// –û—á–∏—â–∞–µ–º –∫—ç—à –¥–ª—è –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏—è –ø–∞–º—è—Ç–∏
		wp_cache_flush();
		gc_collect_cycles();
	}
	
	output_message( '‚úÖ –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ ' . $processed . ' –ø–ª–∞—Ç—å–µ–≤. –û–±–Ω–æ–≤–ª–µ–Ω–æ: ' . $updated . ' –ø–ª–∞—Ç—å–µ–≤.', 'success' );
}

/**
 * –ü—Ä–∏–º–µ–Ω—è–µ—Ç —Ü–µ–Ω–æ–≤—ã–µ –ø—Ä–∞–≤–∏–ª–∞ –∫–æ –≤—Å–µ–º –ø–ª–∞—Ç—å—è–º
 */
function apply_price_rules_to_all_dresses() {
	output_message( 'üí∞ –ù–∞—á–∏–Ω–∞–µ–º –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —Ü–µ–Ω–æ–≤—ã—Ö –ø—Ä–∞–≤–∏–ª –∫–æ –≤—Å–µ–º –ø–ª–∞—Ç—å—è–º...', 'info' );
	
	// –ü–æ–ª—É—á–∞–µ–º –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–ª–∞—Ç—å–µ–≤
	$total_dresses = wp_count_posts( 'dress' )->publish;
	
	if ( $total_dresses === 0 ) {
		output_message( '–ü–ª–∞—Ç—å—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.', 'error' );
		return;
	}
	
	output_message( 'üìã –ù–∞–π–¥–µ–Ω–æ ' . $total_dresses . ' –ø–ª–∞—Ç—å–µ–≤ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏.', 'info' );
	
	$processed = 0;
	$updated = 0;
	$batch_size = 50; // –†–∞–∑–º–µ—Ä –±–∞—Ç—á–∞
	$offset = 0;
	
	// –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –ø–ª–∞—Ç—å—è –±–∞—Ç—á–∞–º–∏
	while ( $processed < $total_dresses ) {
		// –ü–æ–ª—É—á–∞–µ–º –±–∞—Ç—á –ø–ª–∞—Ç—å–µ–≤
		$dresses = get_posts( array(
			'post_type'      => 'dress',
			'numberposts'    => $batch_size,
			'offset'         => $offset,
			'post_status'    => 'publish',
			'fields'         => 'ids',
			'orderby'        => 'ID',
			'order'          => 'ASC',
		) );
		
		if ( empty( $dresses ) ) {
			break;
		}
		
		foreach ( $dresses as $dress_id ) {
			// –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å
			show_progress( $processed + 1, $total_dresses, '–ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —Ü–µ–Ω–æ–≤—ã—Ö –ø—Ä–∞–≤–∏–ª' );
			
			// –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
			$current_categories = get_field( 'dress_category', $dress_id );
			$current_categories = is_array( $current_categories ) ? $current_categories : array();
			
			// –ü—Ä–∏–º–µ–Ω—è–µ–º —Ü–µ–Ω–æ–≤—ã–µ –ø—Ä–∞–≤–∏–ª–∞
			$new_categories = apply_price_rules_to_single_dress( $dress_id, $current_categories );
			
			// –ï—Å–ª–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏–∑–º–µ–Ω–∏–ª–∏—Å—å, –æ–±–Ω–æ–≤–ª—è–µ–º
			if ( $new_categories !== $current_categories ) {
				update_field( 'dress_category', $new_categories, $dress_id );
				wp_set_post_terms( $dress_id, $new_categories, 'dress_category' );
				$updated++;
			}
			
			$processed++;
		}
		
		$offset += $batch_size;
		
		// –û—á–∏—â–∞–µ–º –∫—ç—à –¥–ª—è –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏—è –ø–∞–º—è—Ç–∏
		wp_cache_flush();
		gc_collect_cycles();
	}
	
	output_message( '‚úÖ –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ ' . $processed . ' –ø–ª–∞—Ç—å–µ–≤. –û–±–Ω–æ–≤–ª–µ–Ω–æ: ' . $updated . ' –ø–ª–∞—Ç—å–µ–≤.', 'success' );
}

/**
 * –ü—Ä–∏–º–µ–Ω—è–µ—Ç –≤—Å–µ –ø—Ä–∞–≤–∏–ª–∞ –∫–æ –≤—Å–µ–º –ø–ª–∞—Ç—å—è–º
 */
function apply_all_rules_to_all_dresses() {
	output_message( 'üéØ –ù–∞—á–∏–Ω–∞–µ–º –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –≤—Å–µ—Ö –ø—Ä–∞–≤–∏–ª –∫–æ –≤—Å–µ–º –ø–ª–∞—Ç—å—è–º...', 'info' );
	
	// –ü–æ–ª—É—á–∞–µ–º –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–ª–∞—Ç—å–µ–≤
	$total_dresses = wp_count_posts( 'dress' )->publish;
	
	if ( $total_dresses === 0 ) {
		output_message( '–ü–ª–∞—Ç—å—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.', 'error' );
		return;
	}
	
	output_message( 'üìã –ù–∞–π–¥–µ–Ω–æ ' . $total_dresses . ' –ø–ª–∞—Ç—å–µ–≤ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏.', 'info' );
	
	$processed = 0;
	$updated = 0;
	$batch_size = 50; // –†–∞–∑–º–µ—Ä –±–∞—Ç—á–∞
	$offset = 0;
	
	// –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –ø–ª–∞—Ç—å—è –±–∞—Ç—á–∞–º–∏
	while ( $processed < $total_dresses ) {
		// –ü–æ–ª—É—á–∞–µ–º –±–∞—Ç—á –ø–ª–∞—Ç—å–µ–≤
		$dresses = get_posts( array(
			'post_type'      => 'dress',
			'numberposts'    => $batch_size,
			'offset'         => $offset,
			'post_status'    => 'publish',
			'fields'         => 'ids',
			'orderby'        => 'ID',
			'order'          => 'ASC',
		) );
		
		if ( empty( $dresses ) ) {
			break;
		}
		
		foreach ( $dresses as $dress_id ) {
			// –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å
			show_progress( $processed + 1, $total_dresses, '–ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –≤—Å–µ—Ö –ø—Ä–∞–≤–∏–ª' );
			
			// –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
			$current_categories = get_field( 'dress_category', $dress_id );
			$current_categories = is_array( $current_categories ) ? $current_categories : array();
			
			// –ü—Ä–∏–º–µ–Ω—è–µ–º –ø—Ä–∞–≤–∏–ª–∞ –∞–≤—Ç–æ–∫–∞—Ç–µ–≥–æ—Ä–∏–∑–∞—Ü–∏–∏
			$new_categories = apply_auto_rules_to_single_dress( $dress_id, $current_categories );
			
			// –ü—Ä–∏–º–µ–Ω—è–µ–º —Ü–µ–Ω–æ–≤—ã–µ –ø—Ä–∞–≤–∏–ª–∞
			$new_categories = apply_price_rules_to_single_dress( $dress_id, $new_categories );
			
			// –ï—Å–ª–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏–∑–º–µ–Ω–∏–ª–∏—Å—å, –æ–±–Ω–æ–≤–ª—è–µ–º
			if ( $new_categories !== $current_categories ) {
				update_field( 'dress_category', $new_categories, $dress_id );
				wp_set_post_terms( $dress_id, $new_categories, 'dress_category' );
				$updated++;
			}
			
			$processed++;
		}
		
		$offset += $batch_size;
		
		// –û—á–∏—â–∞–µ–º –∫—ç—à –¥–ª—è –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏—è –ø–∞–º—è—Ç–∏
		wp_cache_flush();
		gc_collect_cycles();
	}
	
	output_message( '‚úÖ –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ ' . $processed . ' –ø–ª–∞—Ç—å–µ–≤. –û–±–Ω–æ–≤–ª–µ–Ω–æ: ' . $updated . ' –ø–ª–∞—Ç—å–µ–≤.', 'success' );
}

/**
 * –ü—Ä–∏–º–µ–Ω—è–µ—Ç –ø—Ä–∞–≤–∏–ª–∞ –∞–≤—Ç–æ–∫–∞—Ç–µ–≥–æ—Ä–∏–∑–∞—Ü–∏–∏ –∫ –æ–¥–Ω–æ–º—É –ø–ª–∞—Ç—å—é
 */
function apply_auto_rules_to_single_dress( $dress_id, $current_categories ) {
	$dress_categories = $current_categories;

	if ( empty( $dress_categories ) ) {
		return $current_categories;
	}

	$dress_categories_objects  = array_map( 'get_term', $dress_categories );
	$parent_dress_categories   = array_filter( $dress_categories_objects, fn( $cat ) => 0 === $cat->parent );
	$parent_dress_category_ids = array_map( fn( $cat ) => $cat->term_id, $parent_dress_categories );

	if ( empty( $parent_dress_category_ids ) ) {
		return $current_categories;
	}

	$filters = array(
		'brand'      => get_field( 'brand', $dress_id ),
		'style'      => get_field( 'style', $dress_id ),
		'silhouette' => get_field( 'silhouette', $dress_id ),
		'color'      => get_field( 'color', $dress_id ),
		'fabric'     => get_field( 'fabric', $dress_id ),
		'badge'      => get_field( 'badge', $dress_id ),
	);

	if ( empty( array_filter( array_values( $filters ) ) ) ) {
		return $current_categories;
	}

	$rules = get_posts( array(
		'post_type'   => 'auto_rule',
		'numberposts' => -1,
		'post_status' => 'publish',
	) );

	$matched_terms = array();

	foreach ( $rules as $rule ) {
		$base_category_id   = get_field( 'base_dress_category', $rule->ID );
		$result_category_id = get_field( 'result_dress_category', $rule->ID );
		$rule_filters       = get_field( 'filters', $rule->ID );

		if ( ! $base_category_id || ! $result_category_id ) {
			continue;
		}

		if ( ! in_array( $base_category_id, $parent_dress_category_ids, true ) ) {
			continue;
		}

		$matched = false;

		foreach ( $rule_filters as $taxonomy => $rule_terms ) {
			if ( empty( $rule_terms ) || empty( $filters[ $taxonomy ] ) ) {
				continue;
			}

			// –°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–ª—è –ø–æ–ª—è badge (–Ω–µ —Ç–∞–∫—Å–æ–Ω–æ–º–∏—è)
			if ( 'badge' === $taxonomy ) {
				if ( $filters[ $taxonomy ] === $rule_terms ) {
					$matched = true;
				} else {
					$matched = false;
					break;
				}
			} else {
				// –û–±—ã—á–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–ª—è —Ç–∞–∫—Å–æ–Ω–æ–º–∏–π
				$common = array_intersect( $filters[ $taxonomy ], $rule_terms );

				if ( empty( $common ) ) {
					$matched = false;
					break;
				}

				$matched = true;
			}
		}

		if ( $matched ) {
			$matched_terms[] = $result_category_id;
		}
	}

	// –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ–±—ä–µ–¥–∏–Ω–µ–Ω–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
	if ( ! empty( $matched_terms ) ) {
		return array_unique( array_merge( $dress_categories, $matched_terms ) );
	}

	return $current_categories;
}

/**
 * –ü—Ä–∏–º–µ–Ω—è–µ—Ç —Ü–µ–Ω–æ–≤—ã–µ –ø—Ä–∞–≤–∏–ª–∞ –∫ –æ–¥–Ω–æ–º—É –ø–ª–∞—Ç—å—é
 */
function apply_price_rules_to_single_dress( $dress_id, $current_categories ) {
	// –ü–æ–ª—É—á–∞–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—É—é —Ü–µ–Ω—É –ø–ª–∞—Ç—å—è
	$final_price = get_field( 'final_price', $dress_id );
	
	if ( empty( $final_price ) || ! is_numeric( $final_price ) ) {
		return $current_categories;
	}

	// –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø–ª–∞—Ç—å—è
	$dress_categories = $current_categories;

	if ( empty( $dress_categories ) ) {
		return $current_categories;
	}

	// –ü–æ–ª—É—á–∞–µ–º —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø–ª–∞—Ç—å–µ–≤ (–∫–æ—Ä–Ω–µ–≤—ã–µ)
	$dress_categories_objects  = array_map( 'get_term', $dress_categories );
	$parent_dress_categories   = array_filter( $dress_categories_objects, fn( $cat ) => 0 === $cat->parent );
	$parent_dress_category_ids = array_map( fn( $cat ) => $cat->term_id, $parent_dress_categories );

	if ( empty( $parent_dress_category_ids ) ) {
		return $current_categories;
	}

	// –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∞–∫—Ç–∏–≤–Ω—ã–µ —Ü–µ–Ω–æ–≤—ã–µ –ø—Ä–∞–≤–∏–ª–∞
	$price_rules = get_posts( array(
		'post_type'   => 'price_rule',
		'numberposts' => -1,
		'post_status' => 'publish',
	) );

	$matched_categories = array();

	foreach ( $price_rules as $rule ) {
		$min_price = get_field( 'min_price', $rule->ID );
		$max_price = get_field( 'max_price', $rule->ID );
		$base_category = get_field( 'base_dress_category', $rule->ID ); // –ë–∞–∑–æ–≤–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è
		$target_category = get_field( 'target_category', $rule->ID );

		if ( empty( $target_category ) ) {
			continue;
		}

		// –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–ª–∞—Ç—å–µ –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∏—Ç –∫ –±–∞–∑–æ–≤–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø—Ä–∞–≤–∏–ª–∞
		if ( ! empty( $base_category ) && ! in_array( $base_category, $parent_dress_category_ids, true ) ) {
			continue;
		}

		// –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Ü–µ–Ω—ã –ø—Ä–∞–≤–∏–ª—É
		$matches = false;

		if ( ! empty( $min_price ) && ! empty( $max_price ) ) {
			// –î–∏–∞–ø–∞–∑–æ–Ω —Ü–µ–Ω
			$matches = ( $final_price >= $min_price && $final_price <= $max_price );
		} elseif ( ! empty( $min_price ) ) {
			// –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞
			$matches = ( $final_price >= $min_price );
		} elseif ( ! empty( $max_price ) ) {
			// –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞
			$matches = ( $final_price <= $max_price );
		}

		if ( $matches ) {
			$matched_categories[] = $target_category;
		}
	}

	// –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ–±—ä–µ–¥–∏–Ω–µ–Ω–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
	if ( ! empty( $matched_categories ) ) {
		return array_unique( array_merge( $dress_categories, $matched_categories ) );
	}

	return $current_categories;
}
